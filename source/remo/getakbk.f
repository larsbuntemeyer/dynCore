      SUBROUTINE GETAKBK(AK,BK,KE1,ZAK,ZBK,KEMAX)
C
C**** GETAKBK  -   UP:DIE VERTIKALKOORDINATEN-PARAMETER (AK, BK) AUS GDB
C****                 HOLEN UND IN (AK(K), BK(K), K=1,KE1) SCHREIBEN.
C****                 ZUSAETZLICH AUSGABE DER AK, BK AUF 'YUAUFTR'
C**   AUFRUF   :   CALL GETAKBK
C**   ENTRIES  :   KEINE
C**   ZWECK    :   DIE VERTIKALKOORDINATEN-PARAMETER (AK, BK) AUS DEM
C**                GDB HOLEN UND IN (AK(K), BK(K), K=1,KE1) SCHREIBEN.
C**                ZUSAETZLICH AUSGABE DER AK, BK AUF 'YUAUFTR'.
C**   VERSIONS-
C**   DATUM    :   08.02.89
C**
C**   EXTERNALS:   REFSTF (AUS DWDLIB)
C**
C**   EINGABE-
C**   PARAMETER:   KEINE
C**   AUSGABE-
C**   PARAMETER:   KEINE
C**
C**   COMMON-
C**   BLOECKE  :   PARAM, GRIB, ORG, UNITCH, UNITNR, COMPCST,
C**                COMDYN
C**
C**   METHODE  :   AUS GDB DIE AK, BK HOLEN; MIT REFSTF AUSPACKEN
C**   FEHLERBE-
C**   HANDLUNG :   KEINE
C**   VERFASSER:   D.MAJEWSKI
C
      IMPLICIT NONE
C
      INCLUDE "unitnr.h"
      INCLUDE "comdia.h"
C
C     Dummy Arguments
C
      INTEGER, INTENT(IN)    :: KE1,KEMAX
      REAL,    INTENT(IN)    :: ZAK(KEMAX), ZBK(KEMAX)
      REAL,    INTENT(INOUT) :: AK(KE1),    BK(KE1)
C
C     Local Variables
C
      INTEGER :: K
C
      DO K = 1,KE1
         AK(K)   = ZAK(K)
         BK(K)   = ZBK(K)
      ENDDO
C
      IF (LDIA) THEN
C
C     AK, BK AUF EINHEIT 'YUAUFTR' AUSGEBEN
      WRITE(NUAUFTR, 9901)
 9901 FORMAT('0         VERTIKAL-KOORDINATEN-PARAMETER:',/,
     &       '            K     AK(HPA)        BK',/)
      DO K = 1,KE1
         WRITE(NUAUFTR, 9902) K, AK(K)*0.01, BK(K)
 9902    FORMAT(' ', I12, F12.4, F11.5)
      ENDDO
C
      ENDIF
C
      RETURN
      END SUBROUTINE GETAKBK
