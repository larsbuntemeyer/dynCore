C
C      SUBROUTINE VDIFF
C
C**** *VDIFF* - DOES THE VERTICAL EXCHANGE OF U,V,T,Q BY TURBULENCE.
C
C
C     SUBJECT.
C     --------
C
C          THIS ROUTINE COMPUTES THE PHYSICAL TENDENCIES OF THE FOUR
C     PROGNOSTIC VARIABLES U,V,T AND Q DUE TO THE VERTICAL EXCHANGE BY
C     TURBULENT (= NON-MOIST CONVECTIVE) PROCESSES. THESE TENDENCIES ARE
C     OBTAINED AS THE DIFFERENCE BETWEEN THE RESULT OF AN IMPLICIT
C     TIME-STEP STARTING FROM VALUES AT T-1 AND THESE T-1 VALUES. ALL
C     THE DIAGNOSTIC COMPUTATIONS (EXCHANGE COEFFICIENTS, ...) ARE DONE
C     FROM THE T-1 VALUES. AS A BY-PRODUCT THE ROUGHNESS LENGTH OVER SEA
C     IS UPDATED ACCORDINGLY TO THE *CHARNOCK FORMULA. HEAT AND MOISTURE
C     SURFACE FLUXES AND THEIR DERIVATIVES AGAINST TS, WS AND WL
C     (THE LATTER WILL BE LATER WEIGHTED WITH THE SNOW FACTOR IN
C     *VDIFF*), LATER TO BE USED FOR SOIL PROCESSES TREATMENT, ARE ALSO
C     COMPUTED AS WELL AS A STABILITY VALUE TO BE USED AS A DIAGNOSTIC
C     OF THE DEPTH OF THE WELL MIXED LAYER IN CONVECTIVE COMPUTATIONS.
C
C**   INTERFACE.
C     ----------
C
C          *VDIFF* IS CALLED FROM *PHYSC*.
C
C     INPUT ARGUMENTS.
C     ----- ----------
C
C  - 3D
C  PXTM1    : TRACER VARIABLES (T-DT)
C  - 2D
C  PACLC   : CLOUD COVER (OLD VALUE)
C  PAPHM1   : HALF LEVEL PRESSURE (T-DT)
C  PAPM1    : FULL LEVEL PRESSURE (T-DT)
C  PGEOM1   : GEOPOTENTIAL ABOVE SURFACE (T-DT)
C  PQM1     : HUMIDITY (T-DT)
C  PTKEM    : TURBULENT KINETIC ENERGY
C  PTKEM1M  : TURBULENT KINETIC ENERGY (T-DT)
C  PTM1     : TEMPERATURE (T-DT)
C  PUM1     : ZONAL WIND (T-DT)
C  PVM1     : MERIDIONAL WIND (T-DT)
C  PXM1     : CLOUD WATER (T-DT)
C  - 1D
C  LOLAND   : LAND-SEA FLAG
C  PAHFLM   : SURFACE LATENT HEAT FLUX (OLD VALUE)
C  PAHFSM   : SURFACE SENSIBLE HEAT FLUX (OLD VALUE)
C  PAZ0M    : ROUGHNESS LENGTH (OLD VALUE)
C  PDEW2M   : DEW POINT TEMPERATURE AT 2 METER (ACCUMULATED, OLD VALUE)
C  PEVAPM   : SURFACE EVAPORATION (ACCUMULATED, OLD VALUE)
C  PEFORESTM: FOREST COVERAGE
C  PSEAICE  : SEA ICE COVER (NEW VALUE)
C  PSNM1M   : SNOW DEPTH (T-DT)
C  PSRFL    : NET SOLAR RADIATIVE FLUX AT THE SURFACE
C  PTEMP2M  : TEMPERATURE AT 2 METER (ACCUMULATED, OLD VALUE)
C  PTSM1M   : SURFACE TEMPERATURE (T-DT)
C  PTVM1    : VIRTUAL TEMPERATURE AT T-DT
C  PT2MAXM  : MAXIMUM TEMP. AT 2 M. BETWEEN OUTPUT INTERVALS (OLD VALUE)
C  PT2MINM  : MINIMUN TEMP. AT 2 M. BETWEEN OUTPUT INTERVALS (OLD VALUE)
C  PUSTAR3M : TKE FOR OCEAN MIXED LAYER (ACCUMULATED, OLD VALUE)
C  PUSTRM   : U-STRESS (ACCUMULATED, OLD VALUE)
C  PVSTRM   : V-STRESS (ACCUMULATED, OLD VALUE)
C  PU10M    : U-WIND AT 10 METER (ACCUMULATED, OLD VALUE)
C  PV10M    : V-WIND AT 10 METER (ACCUMULATED, OLD VALUE)
C  PWIND10M : WIND SPEED AT 10 METER (ACCUMULATED, OLD VALUE)
C  PVDISM   : BOUNDARY LAYER DISSIPATION (ACCUMULATED, OLD VALUE)
C  PWLM1M   : SKIN RESERVOIR CONTENT (T-DT)
C  PWSM1M   : SURFACE SOIL WETNESS (T-DT)
C  PWSMX   : FIELD CAPACITY OF SOIL
C  PVLT    : LEAF AREA INDEX
C
C  BLA      : LAND SEA FRACTION
C  INFRL    : = NINT(BLA(IJ)*FAKINF)
C
C  *** KONSTANTEN
C  FAKINF=10000.
C  EDFAKINF=1./FAKINF

C
C     OUTPUT ARGUMENTS.
C     ------ ----------
C
C  - 2D
C  PTKE     : TURBULENT KINETIC ENERGY (T+DT)
C  - 1D
C  KTROPO   : TROPOPAUSE INDEX
C  PAHFL    : SURFACE LATENT HEAT FLUX (NEW VALUE)
C  PAHFS    : SURFACE SENSIBLE HEAT FLUX (NEW VALUE)
C  PAZ0     : ROUGHNESS LENGTH (NEW VALUE)
C  PCVS     : SNOW COVER FRACTION
C  PCVW     : WET SKIN FRACTION
C  PDEW2    : DEW POINT TEMPERATURE AT 2 METER (ACCUMULATED, NEW VALUE)
C  PDHFQS   : DERIVATIVE OF MOISTURE FLUX OVER SNOW WITH RESP. TO SNOW D
C             UNIT AS QHFL := M/S * RHOH20
C  PDHFQW   : DERIVATIVE OF MOISTURE FLUX WITH RESPECT TO SKIN RESERVOIR
C             UNIT: 1/S * RHOH20
C  PDHFT    : DERIVATIVE OF SENSIBLE HEAT FLUX WITH RESP. TO SURF. TEMP.
C  PEVAP    : SURFACE EVAPORATION (ACCUMULATED, NEW VALUE)
C  PQHFL    : MOISTURE FLUX AT THE SURFACE
C  PRSFL    : LARGE SCALE RAIN FLUX AT THE SURFACE
C  PTHFL    : SENSIBLE HEAT FLUX AT THE SURFACE
C  PXHFL    : LIQUID WATER FLUX AT THE SURFACE
C  PTEMP2   : TEMPERATURE AT 2 METER (ACCUMULATED, NEW VALUE)
C  PT2MAX   : MAXIMUM TEMP. AT 2 M. BETWEEN OUTPUT INTERVALS (NEW VALUE)
C  PT2MIN   : MINIMUN TEMP. AT 2 M. BETWEEN OUTPUT INTERVALS (NEW VALUE)
C  PUSTAR3  : TKE FOR OCEAN MIXED LAYER (ACCUMULATED, NEW VALUE)
C  PUSTR    : U-STRESS (ACCUMULATED, NEW VALUE)
C  PVSTR    : V-STRESS (ACCUMULATED, NEW VALUE)
C  PU10     : U-WIND AT 10 METER (ACCUMULATED, NEW VALUE)
C  PV10     : V-WIND AT 10 METER (ACCUMULATED, NEW VALUE)
C  PVDIS    : BOUNDARY LAYER DISSIPATION (ACCUMULATED, NEW VALUE)
C  PWIMAX   : MAXIMUM WINDSPEED AT 10 M. BETW. OUTP. INTERV. (NEW VALUE)
C  PWLMX    : MAXIMUM SKIN RESERVOIR CONTNET
C  PWIND10  : WIND SPEED AT 10 METER (ACCUMULATED, NEW VALUE)
C
C
C     INPUT/OUTPUT ARGUMENTS.
C     -----------------------
C
C  - 3D
C  PXTTE    : TENDENCIES OF TRACER VARIABLES
C  - 2D
C  PVOL     : TENDENCY OF MERIDIONAL WIND
C  PVOM     : TENDENCY OF ZONAL WIND
C  PQTE     : TENDENCY OF HUMIDITY
C  PTTE     : TENDENCY OF TEMPERATURE
C  PXTE     : TENDENCY OF CLOUD WATER
C  - 1D
C  PVGRAT   : VEGETATION RATIO
C
C
C     METHOD.
C     -------
C
C          FIRST AN AUXIALIARY VARIABLE CP(Q)T+GZ IS CREATED ON WHICH
C     THE VERTICAL DIFFUSION PROCESS WILL WORK LIKE ON U,V AND Q. THEN
C     ALONG THE VERTICAL AND AT THE SURFACE, EXCHANGE COEFFICIENTS (WITH
C     THE DIMENSION OF A PRESSURE THICKNESS) ARE COMPUTED FOR MOMENTUM
C     AND FOR HEAT (SENSIBLE PLUS LATENT). THE LETTERS M AND H ARE USED
C     TO DISTINGUISH THEM. THE DIFFUSIONCOEFFICENTS DEPEND ON THE
C     TURBULENT KINETIC ENERGY (TKE) CALCULATED BY AN ADDITIONAL
C     PROGNOSTIC EQUATION, WHICH CONSIDERS ADVEKTION OF TKE.
C          IN THE SECOND PART OF THE ROUTINE THE IMPLICIT LINEAR
C     SYSTEMS FOR U,V FIRST AND T,Q SECOND ARE SOLVED BY A *GAUSSIAN
C     ELIMINATION BACK-SUBSTITUTION METHOD. FOR T AND Q THE LOWER
C     BOUNDARY CONDITION DEPENDS ON THE SURFACE STATE.
C     FOR TKE THE LOWER BOUNDARY CONDITION DEPENDS ON THE SQUARE OF
C     THE FRICTIONAL VELOCITY.
C     OVER LAND, TWO DIFFERENT REGIMES OF EVAPORATION PREVAIL:
C     A STOMATAL RESISTANCE DEPENDENT ONE OVER THE VEGETATED PART
C     AND A SOIL RELATIVE HUMIDITY DEPENDENT ONE OVER THE
C     BARE SOIL PART OF THE GRID MESH.
C     POTENTIAL EVAPORATION TAKES PLACE OVER THE SEA, THE SNOW
C     COVERED PART AND THE LIQUID WATER COVERED PART OF THE
C     GRID MESH AS WELL AS IN CASE OF DEW DEPOSITION.
C          FINALLY ONE RETURNS TO THE VARIABLE TEMPERATURE TO COMPUTE
C     ITS TENDENCY AND THE LATER IS MODIFIED BY THE DISSIPATIONS EFFECT
C     (ONE ASSUMES NO STORAGE IN THE TURBULENT KINETIC ENERGY RANGE) AND
C     THE EFFECT OF MOISTURE DIFFUSION ON CP. Z0 IS UPDATED AND THE
C     SURFACE FLUXES OF T AND Q AND THEIR DERIVATIVES ARE PREPARED AND
C     STORED LIKE THE DIFFERENCE BETWEEN THE IMPLICITELY OBTAINED
C     CP(Q)T+GZ AND CP(Q)T AT THE SURFACE.
C
C     EXTERNALS.
C     ----------
C   ....
C
C     REFERENCE.
C     ----------
C
C          SEE VERTICAL DIFFUSION'S PART OF THE MODEL'S DOCUMENTATION
C     FOR DETAILS ABOUT THE MATHEMATICS OF THIS ROUTINE.
C
C     AUTHOR.
C     -------
C     U. SCHLESE     DKRZ-HAMBURG  FEB-93
C
C     BASED  ON  ORIGINAL ECMWF VERSION BY J.F. GELEYN  - 1982
C                              MODIFIED BY C.B. BLONDIN - 1986
C                                          H. FEICHTER  - 1991
C                                          S. BRINKOP   - 1992
C                                          M. CLAUSSEN  - 1993
C                                          E. ROECKNER  - 1994
C                                          T. SEMMLER   - 2003
C                                          S. HAGEMANN  - 2006
C                                          S. HAGEMANN  - 2008
C
C     SEPTEMBER 2007 - S. HAGEMANN
C     *** BARE SOIL EVAPORATION IN VDIFF IS ONLY TAKEN FROM THE MOST UPPER
C     *** SOIL LAYER, THUS THE FIELD CAPACITY ZWSFC1 OF THIS LAYER IS
C     *** CALCULATED IN PHYORG AND SUBMITTED TO VDIFF
C     JANUARY 2008 - S. HAGEMANN
C     *** BARE SOIL EVAPORATION CAN ONLY BE TAKEN FROM THE MOST UPPER LAYER
C         IF 5 LAYER SOIL SCHEME IS USED. THUS, IF THE BUCKET IS USED, THE
C         THE OLD FORMULATION HAS TO BE USED. THEREFORE THE I5LAYER SWITCH
C         HAS TO BE INCLUDED IN VDIFF.
C
C
C     MARCH 2008 - S. HAGEMANN
C     *** REDUCTION OF TRANSPIRATION DUE TO AVERAGING OF STOMATAL RESISTANCES
C         OVER THE ROOT ZONE OF THE 5 SOIL MOISTURE LAYERS. USE OF SWITCH THAT
C         SWITCHES OFF THIS REDUCTION WITHOUT SWITCHING OFF THE 5 LAYER SCHEME.
C         SWITCH: LTRRED (FALLS DIESES SPAETER ERWEITERT/GENUTZT  WIRD, BLEIBT
C                 ER SO DRIN, AUCH WENN ER VORERST AUSGESCHALTET IST.)
C
C
C     MODIFICATIONS.
C     --------------
C
      SUBROUTINE VDIFF
     &   (KIDIA , KFDIA, KLON  , KTDIA, KLEV, KLEVM1,
     &    KLEVP1, NSTEP, NSTART, TWODT, EPS , LVDIFF,
CJHC &                 , KTRAC
C-----------------------------------------------------------------------
C         - INPUT 3D .
CJHC &       , PXTM1
C         - INPUT 2D .
     &    PACLC  , PAPHM1, PAPM1, PGEOM1, PQM1, PTKEM,
     &    PTKEM1M, PTM1  , PUM1 , PVM1  , PXM1, PTVM1,
C         - IN/OUTPUT 1D .
CTS CHANGE FOR LAND-SEA-SEAICE DIFFERENTIATION
     &    INFRL  , INFRW  , INFRI  ,
     &    PAHFL  , PAHFS  , PAHFSL , PAHFSW, PAHFSI,
     &    PAZ0   , PAZ0L  , PAZ0W  , PAZ0I , PDEW2 ,
     &    PEVAPM , PEVAPL , PEVAPW , PEVAPI,
     &    PSNM1M , PSRFL  , PTEMP2 , PT2MAX,
CTS 170100
     &    PT2MIN , PUSTAR3, PUSTR  , PU10  , PVDIS , PVSTR  ,
CTS CHANGE FOR LAND-SEA-SEAICE DIFFERENTIATION
     &    PV10   , PWIMAX , PWIND10, PUSTRL, PUSTRW, PUSTRI ,
     &    PVSTRL , PVSTRW , PVSTRI , PWLM1M, PWSM1M, PWSMX  , PVLT,
CTS 170100
C         - INPUT 1D LAM SPECIFIC
     &    PSINLAT,
C         - OUTPUT 2D .
     &    PTKE,
CDJTS CHANGE FOR REMO1.0 AND FOR LAND-SEA-SEAICE DIFFERENTIATION
     &    PZ2ZM, PZ2ZML, PZ2ZMW, PZ2ZMI,
     &    PZ2ZH, PZ2ZHL, PZ2ZHW, PZ2ZHI,
CDJTS 111094 170100
C         - OUTPUT 1D .
CJHC &       , KTROPO
     &    PCVS  , PCVW ,  PDHFQS,
CTS CHANGE FOR LAND-SEA-SEAICE DIFFERENTIATION
     &    PDHFQW, PDHFT, PDHFTI, PEVAP, PQHFL , PQHFLA ,
CTS 170100
     &    PRSFL , PTHFL, PWLMX, PXHFL ,
C         - INPUT/OUTPUT 1D .
     &    PVGRAT, PQDB , PQDBL, PQDBW , PQDBI,
CTS - INPUT/OUTPUT LAND-SEA-SEAICE DIFFERENTIATION
     &    PTHFLI, PTSLM1M, PTSWM1M, PTSIM1M,
CTS 170100
     &    WI3M1M, LOLAND, LOSEA, LOICE, PGHPBL,
CSH  *** - SOIL MOISTURE LAYERS, EVAP. FLUXES OVER LAND
     &    NDEEP, WSIM1M, AETRANS, AEBSOIL, AESNOW, AESKIN,
CSP  ***  - CLOUD ICE
     &    PXIM1, DZR, I5LAYER, DZRSI, ZWSFC)
C
C     ----------------
      IMPLICIT NONE
C
      INCLUDE "COMCON"
      INCLUDE "COMPH2"
      INCLUDE "COMVEG"
      INCLUDE "YOTLUC"
      INCLUDE "faktinf.h"
      INCLUDE "parorg.h"
C     ---------------------------------
C
C     ----------------
C     Dummy Arguments
C
      INTEGER, INTENT(IN) :: KIDIA , KFDIA, KLON  , KTDIA, KLEV, KLEVM1,
     &                       KLEVP1, NSTEP, NSTART
C
      REAL,    INTENT(IN) :: TWODT
C
      REAL,    INTENT(IN)    :: PACLC(KLON,KLEV),
     &     PAPHM1(KLON,KLEVP1), PAPM1(KLON,KLEV),
     &     PGEOM1(KLON,KLEV) ,  PQM1(KLON,KLEV),
     &     PTM1(KLON,KLEV)   ,  PUM1(KLON,KLEV),
     &     PVM1(KLON,KLEV)   ,  PXM1(KLON,KLEV), PTVM1(KLON,KLEV),
     &     PEVAPM(KLON) ,       PSNM1M(KLON) ,   PSRFL(KLON)
C
      REAL,    INTENT(INOUT) :: 
     &     PTKEM(KLON,KLEV), PTKEM1M(KLON,KLEV),
     &     PAHFL(KLON)  ,    PAHFS(KLON)  , PAZ0(KLON),
CTS
     &     PDEW2(KLON)  , 
     &     PTEMP2(KLON) , PT2MAX(KLON)
CTS 170100
      REAL,    INTENT(IN)    :: 
     &     PWLM1M(KLON) , PWSMX(KLON),   PSINLAT(KLON)
C
      REAL,    INTENT(INOUT) ::
     &     PT2MIN(KLON) , PUSTAR3(KLON), PUSTR(KLON)    ,
     &     PU10(KLON)   , PVDIS(KLON)  , PVSTR(KLON)    ,
     &     PV10(KLON)   , PWIMAX(KLON) , PWIND10(KLON)  ,
     &     PWSM1M(KLON) , 
     &     PVLT(KLON)   , PTKE(KLON,KLEV)
      REAL,    INTENT(INOUT) ::
CDJTS CHANGES FOR REMO1.0 AND FOR LAND-/SEA-/SEAICE DIFFERENTIATION
     &     PZ2ZM(KLON,KLEV), PZ2ZML(KLON), PZ2ZMW(KLON), PZ2ZMI(KLON),
     &     PZ2ZH(KLON,KLEV), PZ2ZHL(KLON), PZ2ZHW(KLON), PZ2ZHI(KLON),
     &     PQDB (KLON)     , PQDBL (KLON), PQDBW (KLON), PQDBI (KLON)
      REAL,    INTENT(INOUT) ::
CDJTS 101094 170100
     &     PCVS(KLON)  , PCVW(KLON) , PDHFQS(KLON),
     &     PDHFQW(KLON), PDHFT(KLON), PEVAP(KLON), PQHFL(KLON) ,
     &     PRSFL(KLON) , PTHFL(KLON), PWLMX(KLON), PXHFL(KLON) 
      REAL,    INTENT(IN) ::
CTS CHANGES FOR LAND-/SEA-/SEAICE DIFFERENTIATION
     &     PVGRAT(KLON),
     &     PTSLM1M(KLON),PTSWM1M(KLON),PTSIM1M(KLON),WI3M1M(KLON)
      REAL,    INTENT(INOUT) ::
     &     PAZ0L (KLON), PAZ0W (KLON), PAZ0I (KLON),
     &     PAHFSL(KLON), PAHFSW(KLON), PAHFSI(KLON),
     &     PEVAPL(KLON), PEVAPW(KLON), PEVAPI(KLON),
     &     PUSTRL(KLON), PUSTRW(KLON), PUSTRI(KLON),
     &     PVSTRL(KLON), PVSTRW(KLON), PVSTRI(KLON),
     &     PTHFLI(KLON), PQHFLA(KLON), PDHFTI(KLON)
     
CRP   HEIGHT OF PLANETARY BOUNDARY LAYER TIMES G
      REAL, INTENT(INOUT) :: PGHPBL(KLON)
C
CSH   *** - SOIL MOISTURE LAYERS, EVAP. FLUXES OVER LAND
      INTEGER, INTENT(IN) :: NDEEP

      REAL, INTENT(INOUT) :: WSIM1M(KLON, NDEEP), 
     &     AETRANS(KLON), AEBSOIL(KLON),
     &     AESNOW(KLON),  AESKIN(KLON)
C
      REAL, INTENT(IN)    :: DZR(KLON),
     &     ZWSFC(KLON, NDEEP),  DZRSI(KLON, NDEEP)
C
      REAL,    INTENT(IN) :: PXIM1(KLON,KLEV)
      LOGICAL, INTENT(IN) :: LVDIFF
C
CTS CHANGES FOR LAND-/SEA-/SEAICE DIFFERENTIATION
C
      INTEGER, INTENT(IN) :: INFRL(KLON), INFRW(KLON), INFRI(KLON)
C
      LOGICAL, INTENT(IN) :: LOLAND(KLON), LOSEA(KLON), LOICE(KLON)
C
C     ----------------
C     Local Variables
C
CTS 170100
C
C     TEMPORARY ARRAYS
C
      REAL ZCFM(KLON,KLEV)  , ZDIS(KLON,KLEV) , ZCFH(KLON,KLEV) ,
     &     ZCPTGZ(KLON,KLEV), ZEBSM(KLON,KLEV), ZUDIF(KLON,KLEV),
     &     ZVDIF(KLON,KLEV) ,
     &     ZWET(KLON)       , ZQS(KLON)       , ZDQS(KLON)      ,
     &     ZCPTS(KLON)      , ZTVS(KLON)      , ZRI(KLON)       ,
     &     ZUCF(KLON)       , ZSCF(KLON)      , ZCFNC(KLON)     ,
     &     ZCDN(KLON)       , ZTCOE(KLON)     , ZWLMXI(KLON)    ,
     &     ZCR(KLON)        , ZRS0(KLON)      , ZHUM(KLON)      ,
     &     ZCSAT(KLON)      , ZCAIR(KLON)     , ZTDIF(KLON,KLEV),
     &     ZQDIF(KLON,KLEV) , ZEBSH(KLON,KLEV), ZVIDIS(KLON)    ,
C
     &     ZHSOIL(KLON), ZBN(KLON)   , ZBM(KLON)        ,
CTS
     &     ZBH(KLON)   , ZCHN(KLON)  , ZUSTAR(KLON)     ,
     &     ZWST(KLON)  , ZRICLS(KLON), ZTESS (KLON)     ,
     &     ZCFNCH(KLON), ZHDYN(KLON) , ZTETA1(KLON,KLEV),
CTS 170100
C
     &     ZLTETA1(KLON,KLEV)  , ZTVIR1(KLON,KLEV) , ZHH(KLON,KLEVM1),
     &     ZQSS(KLON,KLEV)     , ZXDIF(KLON,KLEV)  , ZEDIF(KLON,KLEV),
     &     ZTKEVN(KLON,KLEV)   , ZQSSM(KLON,KLEVM1), ZCDUM(KLON,KLEV),
C
     &     ZTMITTE(KLON,KLEVM1), ZTVIRMIT(KLON,KLEVM1),
     &     ZFAXEN(KLON,KLEVM1) , ZFAXE(KLON,KLEV)     ,
     &     ZCCOVER(KLON,KLEVM1), ZLWCMIT(KLON,KLEVM1) ,
     &     ZTEMIT(KLON,KLEVM1) , ZQMIT(KLON,KLEVM1)   ,
C
CTS CHANGES FOR LAND-/SEA-/SEAICE DIFFERENTIATION
C
     &     ZQW(KLON)    ,ZQI(KLON)    ,!ZQE(KLON)    ,ZDQW(KLON)  ,
     &     ZDQI(KLON)   ,ZTESW(KLON)  ,ZTESI(KLON)  ,ZCPTE(KLON) ,
     &     ZTVW(KLON)   ,ZTVI(KLON)   ,ZRIW(KLON)   ,ZRII(KLON)  ,
     &     ZUCFW(KLON)  ,ZUCFI(KLON)  ,ZSCFW(KLON)  ,ZSCFI(KLON) ,
     &     ZCFNCW(KLON) ,ZCFNCWH(KLON),ZCFNCI(KLON) ,ZCFNCIH(KLON),
     &     ZCFML(KLON)  ,ZCFMW(KLON)  ,ZQHFLW(KLON) ,ZQHFLI(KLON),
     &     ZCFMI(KLON)  ,ZCFHL(KLON)  ,ZCFHW(KLON)  ,ZCFHI(KLON) ,
     &     ZCDNW(KLON)  ,ZCHNW(KLON)  ,ZCDNI(KLON)  ,ZCHNI(KLON) ,
     &     ZRICLW(KLON) ,ZRICLI(KLON) ,ZCRI(KLON)   ,ZTHFLW(KLON),
     &     ZWSTW(KLON)  ,ZWSTI(KLON)  ,ZCHL(KLON)   ,
     &     ZCHW(KLON)   ,ZCHI(KLON)   ,ZBNW(KLON)   ,ZBNI(KLON)  ,
     &     ZBMW(KLON)   ,ZBMI(KLON)   ,ZBHW(KLON)   ,ZBHI(KLON)  ,
     &     ZUSTARW(KLON),ZUSTARI(KLON),ZCPTW(KLON)  ,ZCPTI(KLON)
CTS 170100
C
CSH   *** - WET HEAT FLUXES OVER LAND TO CALCULATE SEPARATE EVAP.
      REAL ZQBSOIL(KLON), ZQTRANS(KLON), ZTRFAK(KLON)
CSH   *** SWITCH FOR TRANSPIRATION REDUCTION WITH 5 SOIL LAYERS
      LOGICAL, PARAMETER :: LTRRED=.FALSE.
      REAL,    PARAMETER :: ZEPSFC=1.E-15           ! EPSILON
C
      INTEGER IHPBL(KLON), IHPBLC(KLON), IHPBLD(KLON)
C
      REAL :: ZCBS,ZCBN,ZBUOY,ZBET,ZB,ZAPH2M,ZALVS,ZALOH,ZALO,ZCOEFI,
     &        ZCOEFF,ZCOEFA,ZCHNEU,ZCHAR,ZCFM2M,ZCDNR,ZCDN2M,ZCBU,
     &        ZCONS,ZCONS18,ZCONS16,ZCONS15,ZCONS14,ZCONS12,
     &        ZCONS11,ZCOEFW,ZC,ZCONS5,ZCONS3,
     &        ZCONS28,ZCONS25,ZCONS2,ZCONS17,
     &        ZCONS6,ZCONS9,ZCONS8,ZCOR,ZCPD,ZCONVS,ZDIAGW,ZDIAGT,
     &        ZDEW2L,ZDEW2I,ZD,ZDA1,ZCVM5,ZCVM4,ZCVM3,ZDU2,
     &        ZDTHV,ZDS,ZDQTOT,ZDIVV1,ZDIVV,ZDISQ,ZDISL,ZDISC,ZDEW2W,
     &        ZEPSR,ZEPSHR,ZEPSEC,ZEPS,ZEPHUM,ZEPDU2,ZEPCOR,ZDZ,ZDUS2,
     &        ZFREEC,ZFRAC,ZFOX,ZFAC,ZES,ZEPZZO,ZEPZ0O,ZEPSW,ZDUS1,
     &        ZKAP,ZHUV,ZHTQ,ZHEXP,ZH2M,ZH2,ZH1,ZGHABL,ZGAM,ZFUX,ZMONOB,
     &        ZMIX,ZM4,ZM2,ZM1,ZLAM,ZKTEST,ZKAPPA,ZQ2M,ZPLMAX,
     &        ZPLMIN,ZMULT5,ZMULT4,ZMULT3,ZMULT2,ZMULT1,ZLN2,ZLN1,
     &        ZQSNCR,ZQSMIT,ZQS2,ZQS1,ZQNLEV,ZQMITTE,ZQLWI2,ZQLWI1,ZQDP,
     &        ZQDDIF,ZRVRD,ZRSI,ZRHOS,ZRH2M,ZRED,ZRDRV,ZRD,ZRAT,ZQWEVAP,
     &        ZQTMIT,ZSPEEDL,ZSPEEDI,ZSOIL,ZSMN,ZSM,ZSHN,ZSHEAR,ZSH,
     &        ZSDEP2,ZSDEP1,ZTAUXW,ZTAUXL,ZTAUXI,ZTAU,ZT2W,ZT2I,ZT2,
     &        ZSTABF,ZSRFL,ZSPEEDW,ZTKEVL,ZTKEVI,ZTKESQ,ZTKEMIN,ZTEST,
     &        ZTEMITTE,ZTELDIF,ZTAUYW,ZTAUYL,ZTAUYI,ZU10I,ZTPFAC4,
     &        ZTPFAC3,ZTPFAC2,ZTPFAC1,ZTNLEV,ZTMST,ZTMIT,ZTMELT,ZTKEVW,
     &        ZV10I,ZUSUS1,ZUSTW,ZUSTL,ZUSTI,ZUSTF,ZUSTARM,ZUST,ZU10W,
     &        ZU10L,ZVKC,ZVK,ZVC,ZVBC,ZVB,ZVABC,ZVA,ZV10W,ZV10L,ZWSLEV,
     &        ZWPWP,ZWLMAX,ZWIN,ZWCRIT,ZVXMKLT,ZVRAD,ZVKLT,ZVIRMITTE,
     &        ZCONS23,ZZQS,ZZQE,ZZCFH,ZZB,ZZ2GEO,ZXNLEV,ZXHFL,ZWSTOP,
     &        ZWSTF,ZZZQS,ZZZM,ZZZLAM,ZZZH,ZZTVM,ZZT,ZZCPTS,ZVXPKLT,
     &        ZALH2,ZALF,ZABCS,Z0H,Z1DGAM,EPS,Z2GEOMF
C
      INTEGER :: JL,JK,ITOPP1,ITOP,IT,I5LAYER
C
      LOGICAL :: LO, LO1
C
CTS 170100
C ------------------------------------------------
C
C*    PHYSICAL CONSTANTS.
C     -------- ----------
C
C          *ZLAM* IS THE ASYMPTOTIC MIXING LENGTH FOR MOMENTUM EXCHANGE,
C     *ZKAP* IS THE VON KARMAN CONSTANT, *ZB*, *ZC* AND *ZD* ARE SOME
C     CONSTANTS FOR THE FORMULAE ABOUT STABILITY DEPENDENCY RESPECTIVELY
C     NEAR THE NEUTRAL CASE, IN THE UNSTABLE CASE AND IN THE STABLE
C     CASE AND *ZCHAR* IS THE CONSTANT OF THE *CHARNOCK FORMULA.
C     *ZQWSSAT* AND *ZQSNCR* ARE THE INVERSES OF CRITICAL VALUES FOR
C     SOIL WATER AND SNOW DEPTH THAT ARE USED IN THE COMPUTATION OF THE
C     EVAPOTRANSPIRATIONS EFFICIENCY.
C
C
C
      ZLAM=CLAM
      ZKAP=CKAP
      ZB=CB
      ZC=CC
      ZD=CD
      ZCHAR=CCHAR
      ZVA=CVA
      ZVB=CVB
      ZVC=CVC
      ZVBC=CVBC
      ZVK=CVK
      ZVKC=CVKC
      ZVABC=CVABC
      ZVRAD=CVRAD
      ZWLMAX=CWLMAX
C
      ZQSNCR=CQSNCR
      ZTKEMIN=1.E-4
      ZTMELT=TMELT
      ZRVRD=VTMPC1+1.
      ZRDRV=1./ZRVRD
C
      ZCPD=CPD
      ZRD=RD
      ZKAPPA=ZRD/ZCPD
C
C*      PARAMETERS FOR BOUNDARY LAYER DIAGNOSTICS
C       ---------- --- -------- ----- -----------
C
      ZHUV=10.*G
      ZHTQ=2.*G
      ZEPHUM=5.E-2
      ZRHOS=RHOH2O*1.025
C
C
C*    SECURITY PARAMETERS.
C     --------------------
C
C     ZEPDU2 IS A MINIMUM SQUARED WIND INCREMENT TO AVOID DIVIDING BY
C     ZERO IN THE *RICHARDSON NUMBERS CALCULATION AND ZEPZZO IS A
C     MINIMUM ROUGHNESS LENGTH.
C
      ZEPDU2=0.1
      ZEPSHR=1.E-5
      ZEPZZO=1.5E-05
      ZEPZ0O=2.
      ZEPCOR=5.E-05
C
C     ZEPSW IS THE MINIMUM RELATIVE HUMIDITY OF THE GROUND,
C     ZEPSR IS A MINIMUM VALUE FOR THE RADIATION IN THE
C     VISIBLE PART OF THE SPECTRUM USED TO COMPUTE THE
C     CANOPY RESISTANCE.
C
      ZEPSW=1.E-3
      ZEPSR=1.E-10
C
C     ZEPSEC IS A MINIMUM VALUE FOR THE DRAG COEFFICIENT
C
      ZEPSEC=1.E-2
C
C*    COMPUTATIONAL CONSTANTS.
C     ------------- ----------
C
      ZTMST=TWODT
      IF (NSTEP.EQ.NSTART) ZTMST=0.5*TWODT
      ZDIAGT=0.5*TWODT
      ZDIAGW=ZDIAGT/RHOH2O
C
      ZTPFAC1=CVDIFTS
      ZTPFAC2=1./ZTPFAC1
      ZTPFAC3=1.-ZTPFAC2
      ZTPFAC4=1.+ZTPFAC3
C
CRP   ZZZLAM=30. IN T106
      ZZZLAM=CZZLAM
      ZCONS2=0.5*ZKAP/G
      ZCONS3=ZLAM
      ZCONS5=3.*ZB*ZC*G**2
      ZCONS6=1./3.
      ZCONS8=2.*ZB
      ZCONS9=3.*ZB
      ZCONS11=3.*ZB*ZC
      ZCONS12=ZTPFAC1*ZTMST*G/RD
      ZCONS14=ZCHAR*RD/(G**2*ZTMST)
      ZCONS15=1./(G*ZTMST)
      ZCONS16=CPD*VTMPC2
      ZCONS17=1./ZKAP**2
      ZCONS18=ZTPFAC1*ZTMST*G**2
      ZCONS25=ZCONS2/ZCONS3
CDJ CHANGES FOR REMO1.0
CDJ 101094
CTS CHANGES FOR LAND-/SEA-/SEAICE DIFFERENTIATION
      ZCONS28=1./(ZTPFAC1*ZTMST)
CTS 170100
C
      ZPLMAX=0.75
      ZPLMIN=0.35
C
C     ZCHNEU=.5
      ZCHNEU=.3
C
C      CONSTANT FOR FREE CONVECTION
C      EXPONENT FOR THE INTERPOLATION BETWEEN FREE CONVECTION
C      AND NEUTRAL OVER SEA
C
C     ZFREEC=0.002
      ZFREEC=0.0016
      ZGAM=1.25
      Z1DGAM=1./ZGAM
C
      ZH1= 2.22
      ZH2= 0.22
      ZM1= 1.24
      ZM2= 2.37
      ZM4= 3.69
      ZSHN=ZH1*ZH2*SQRT(2.)
      ZSMN=ZSHN*ZM1*ZM2/ZM4
      ZDA1=1./ZSMN**3
      ZUSTF=1./ZSMN**2
      ZWSTF=0.2
C
      ITOP=1
      ITOPP1=ITOP+1
C
C
C     ------------------------------------------------------------------
C
C*         1.     LOCATE AND POSITION SPACE.
C                 ------ --- -------- ------
C
CJHC
C
C     DIASBLE ALL THE DIAGNOSTICS IN THE LAM VERSION:
C
CJHC
C
C     ------------------------------------------------------------------
C
C*         2.     NEW THERMODYNAMIC VARIABLE AND BOUNDARY CONDITIONS.
C                 --- ------------- -------- --- -------- -----------
C
C
C*         2.1     REPLACE T BY CP(Q)*T+GZ IN THE ATMOSPHERE.
C
      DO JK=KTDIA,KLEV
         DO JL=KIDIA,KFDIA
            ZCPTGZ(JL,JK)=PGEOM1(JL,JK)+PTM1(JL,JK)*CPD
     &           *(1.+VTMPC2*PQM1(JL,JK))
            ZTETA1(JL,JK)=PTM1(JL,JK)*(100000./PAPM1(JL,JK))**ZKAPPA
            ZTVIR1(JL,JK)=ZTETA1(JL,JK)*(1.+VTMPC1*PQM1(JL,JK)-
     &           (PXM1(JL,JK)+PXIM1(JL,JK)))
C
            LO=PTM1(JL,JK).GE.ZTMELT
            IF (LO) THEN
               ZFAXE(JL,JK)=ALV
            ELSE
               ZFAXE(JL,JK)=ALS
            ENDIF
            ZBET=ZFAXE(JL,JK)/ZCPD
            ZUSUS1=ZBET*ZTETA1(JL,JK)/PTM1(JL,JK)*
     &           (PXM1(JL,JK)+PXIM1(JL,JK))
            ZLTETA1(JL,JK)=ZTETA1(JL,JK)-ZUSUS1
C
            IT=INT(PTM1(JL,JK)*1000.)
            ZES=TLUCUA(IT)/PAPM1(JL,JK)
            ZES=AMIN1(ZES,0.5)
            ZCOR=1./(1.-VTMPC1*ZES)
            ZQSS(JL,JK)=ZES*ZCOR
C
         ENDDO
      ENDDO
C
      DO JK=KTDIA,KLEVM1
         DO JL=KIDIA,KFDIA
            ZHH(JL,JK)=(PGEOM1(JL,JK)-PGEOM1(JL,JK+1))
            ZSDEP1=(PAPHM1(JL,JK)-PAPHM1(JL,JK+1))/(PAPHM1(JL,JK)-
     &           PAPHM1(JL,JK+2))
            ZSDEP2=(PAPHM1(JL,JK+1)-PAPHM1(JL,JK+2))/(PAPHM1(JL,JK)-
     &           PAPHM1(JL,JK+2))
C
            ZQSSM(JL,JK)=ZSDEP1*ZQSS(JL,JK)+ZSDEP2*ZQSS(JL,JK+1)
            ZTMITTE(JL,JK)=ZSDEP1*PTM1(JL,JK)+ZSDEP2*PTM1(JL,JK+1)
            ZTVIRMIT(JL,JK)=ZSDEP1*ZTVIR1(JL,JK)+ZSDEP2*ZTVIR1(JL,JK+1)
            ZFAXEN(JL,JK)=ZSDEP1*ZFAXE(JL,JK)+ZSDEP2*ZFAXE(JL,JK+1)
            ZLWCMIT(JL,JK)=ZSDEP1*(PXM1(JL,JK)+PXIM1(JL,JK))
     &           +ZSDEP2*(PXM1(JL,JK+1)+PXIM1(JL,JK+1))
            ZQMIT(JL,JK)=ZSDEP1*PQM1(JL,JK)+ZSDEP2*PQM1(JL,JK+1)
            ZTEMIT(JL,JK)=ZSDEP1*ZTETA1(JL,JK)+ZSDEP2*ZTETA1(JL,JK+1)
            ZCCOVER(JL,JK)=PACLC(JL,JK)*ZSDEP1+PACLC(JL,JK+1)*ZSDEP2
         ENDDO
      ENDDO
C
C          COMPUTE FRACTIONAL SURFACE COVERAGES
C
      DO JL=KIDIA,KFDIA
         PCVS(JL)=AMIN1(1.,PSNM1M(JL)*ZQSNCR)
         PWLMX(JL)=ZWLMAX*((1.-PVGRAT(JL))+PVGRAT(JL)*PVLT(JL))
         ZWLMXI(JL)=1./PWLMX(JL)
         PCVW(JL)=PWLM1M(JL)*ZWLMXI(JL)
      ENDDO
C
CTS*       2.2     FRACTIONAL LANDUSE,
CTS*               SURFACE HUMIDITY AND VIRTUAL TEMPERATURE
CTS*               FOR LAND, WATER AND SEAICE
C
      DO JL=KIDIA,KFDIA
CTS
CTS   LAND
CTS
         IF (LOLAND(JL)) THEN
            LO=(PTSLM1M(JL)-TMELT).GT.0.
CTS 170100
            IF (LO) THEN
               ZCVM3=C3LES
               ZCVM4=C4LES
               ZCVM5=C5LES
            ELSE
               ZCVM3=C3IES
               ZCVM4=C4IES
               ZCVM5=C5IES
            ENDIF
CTS CHANGES FOR LAND-/SEA-/SEAICE DIFFERENTIATION
            IT=INT(PTSLM1M(JL)*1000.)
CTS 170100
            ZES=TLUCUA(IT)/PAPHM1(JL,KLEVP1)
            ZCOR=1./(1.-VTMPC1*ZES)
            ZQS(JL)=ZES*ZCOR
CTS CHANGES FOR LAND-/SEA-/SEAICE DIFFERENTIATION
            ZDQS(JL)=ZQS(JL)*ZCVM5*ZCOR*(1./(PTSLM1M(JL)-ZCVM4))**2
CTS 170100
            PWSM1M(JL)=AMIN1(PWSM1M(JL),PWSMX(JL))
C
CSH      *** NO 5 LAYER --> BARE SOIL EVAPORATION ONLY FROM THE UPPER 20 CM
C        *** OF THE FIELD CAPACITY WSMX.
            IF (I5LAYER.EQ.0) THEN
               ZWSTOP=AMIN1(0.1,PWSMX(JL))
               ZWSLEV=PWSMX(JL)-ZWSTOP
               IF(PWSM1M(JL).GT.ZWSLEV) THEN
                  ZHUM(JL)=0.5*(1.-COS((PWSM1M(JL)-ZWSLEV)*API/ZWSTOP))
               ELSE
                  ZHUM(JL)=0.
               ENDIF
C
CSH      *** CHANGES FOR BARE SOIL EVAPORATION ONLY FROM THE UPPER SOIL LAYER
            ELSE IF (I5LAYER.EQ.1) THEN
               WSIM1M(JL,1) = AMIN1(WSIM1M(JL,1), ZWSFC(JL,1))
               IF (WSIM1M(JL,1).GT.0.) THEN
                  ZHUM(JL)=0.5*(1.-COS( WSIM1M(JL,1)*API/ZWSFC(JL,1) ) )
               ELSE
                  ZHUM(JL)=0.
               ENDIF
            ENDIF
C
CSH
C
            ZHSOIL(JL)=PCVS(JL)+(1.-PCVS(JL))*(PCVW(JL)+(1.-PCVW(JL))
     &           *ZHUM(JL))
            LO=PQM1(JL,KLEV).GT.ZQS(JL)
            IF (LO) ZHSOIL(JL)=1.
CTS CHANGES FOR LAND-/SEA-/SEAICE DIFFERENTIATION
            ZTESS(JL)=PTSLM1M(JL)*(1.E5/PAPHM1(JL,KLEVP1))**ZKAPPA
CTS 170100
            ZTVS(JL)=ZTESS(JL)*(1.+VTMPC1*ZHSOIL(JL)*ZQS(JL))
CTS CHANGES FOR LAND-/SEA-/SEAICE DIFFERENTIATION
         ELSE
            ZQS(JL)=0.0
            PWSM1M(JL)=0.0
         ENDIF
CTS
CTS   WATER
CTS
         IF (LOSEA(JL)) THEN
            ZCVM3=C3LES
            ZCVM4=C4LES
            ZCVM5=C5LES
            IT=INT(PTSWM1M(JL)*1000.)
            ZES=TLUCUA(IT)/PAPHM1(JL,KLEVP1)
            ZCOR=1./(1.-VTMPC1*ZES)
            ZQW(JL)=ZES*ZCOR
CKS            ZDQW(JL)=ZQW(JL)*ZCVM5*ZCOR*(1./(PTSWM1M(JL)-ZCVM4))**2
            ZTESW(JL)=PTSWM1M(JL)*(1.E5/PAPHM1(JL,KLEVP1))**ZKAPPA
            ZTVW(JL)=ZTESW(JL)*(1.+VTMPC1*ZQW(JL))
         ELSE
            ZQW(JL)=0.0
         ENDIF
CTS
CTS   SEAICE
CTS
         IF (LOICE(JL)) THEN
            ZCVM3=C3IES
            ZCVM4=C4IES
            ZCVM5=C5IES
            IT=INT(PTSIM1M(JL)*1000.)
            ZES=TLUCUA(IT)/PAPHM1(JL,KLEVP1)
            ZCOR=1./(1.-VTMPC1*ZES)
            ZQI(JL)=ZES*ZCOR
            ZDQI(JL)=ZQI(JL)*ZCVM5*ZCOR*(1./(PTSIM1M(JL)-ZCVM4))**2
            ZTESI(JL)=PTSIM1M(JL)*(1.E5/PAPHM1(JL,KLEVP1))**ZKAPPA
            ZTVI(JL)=ZTESI(JL)*(1.+VTMPC1*ZQI(JL))
         ELSE
            ZQI(JL)=0.0
         ENDIF
CTS 170100
      ENDDO
C
C*         2.3     DEFINITION OF THE STOMATAL RESISTANCE
C
      DO JL=KIDIA,KFDIA
CTS CHANGES FOR LAND-/SEA-/SEAICE DIFFERENTIATION
         IF (LOLAND(JL)) THEN
CTS 170100
CSH      *** CHANGES IN SERIES OF CALCULATIONS
            ZSRFL=AMAX1(ZEPSR,PSRFL(JL)*ZVRAD)
            ZABCS=(ZVA+ZVBC)/(ZVC*ZSRFL)
CRP   EPSILON 1.E-6 WEGEN ALOG EINGEFUEHRT
            PVLT(JL)=AMAX1(PVLT(JL),1.E-6)
            ZVKLT=ZVK*PVLT(JL)
            ZVXPKLT=EXP  (ZVKLT)
            ZVXMKLT=EXP  (-ZVKLT)
            ZLN1=ALOG  ((ZABCS*ZVXPKLT+1.)/(ZABCS+1.))
            ZLN2=ALOG  ((ZABCS+ZVXMKLT)/(ZABCS+1.))
            ZRSI=(ZVB*ZLN1/ZVABC-ZLN2)/ZVKC
            ZRS0(JL)=1./ZRSI
CTS CHANGES FOR LAND-/SEA-/SEAICE DIFFERENTIATION
         ENDIF
CTS 170100
      ENDDO
C***
C
CSH {    *** FOR TRANSPIRATION REDUCTION, ORIGINAL IS SEPARATED,
C        *** SEQUENCE OF CALCULATION IS CHANGED AS TEHY WERE INDEPENDENT
      IF (LTRRED .AND. I5LAYER.EQ.1) THEN
         ZWET(KIDIA:KFDIA) = 0.
         DO JK=1,NDEEP
            DO JL=KIDIA,KFDIA
               IF (LOLAND(JL)) THEN
                  IF (DZRSI(JL,JK).GT.ZEPSFC) THEN
C
C         *** NOTE THAT TRANSPIRATION SHOULD ONLY ACCESS WATER UNTIL
C         *** THE ROOTING DEPTH --> EACH TERM SHOULD INCLUDE THE FACTOR
C         *** AMIN1(DZRSI(JL,JK)/DZSI(JL,JK), 1.) --> KUERZT SICH WEG.

                     ZWPWP=ZPLMIN*ZWSFC(JL,JK)
                     ZQWEVAP = (WSIM1M(JL,JK)-ZWPWP)
     &                    / (ZPLMAX*ZWSFC(JL,JK) - ZWPWP)
                     ZSOIL=AMAX1(ZEPSW,AMIN1(1.,ZQWEVAP) )
C
C         *** CALCULATING AVERAGE STOMATAL RESISTANCE BY WEIGHTING
C         *** WITH THE RELATIVE ROOTED LAYER DEPTH DZRSI/DZR
                     ZWET(JL)= ZWET(JL) + ZRS0(JL)/ZSOIL 
     &                    * DZRSI(JL,JK)/DZR(JL)
                  ENDIF
               ENDIF
            ENDDO
         ENDDO
C
         DO JL=KIDIA,KFDIA
            IF (LOLAND(JL)) THEN
               LO=PQM1(JL,KLEV).GT.ZQS(JL)
               IF (LO) ZWET(JL)=0.
            ENDIF
         ENDDO
C
      ELSE
         DO JL=KIDIA,KFDIA
            IF (LOLAND(JL)) THEN
               ZWCRIT=ZPLMAX*PWSMX(JL)
               ZWPWP=ZPLMIN*PWSMX(JL)
               ZQWEVAP=1./(ZWCRIT-ZWPWP)
               ZSOIL=AMAX1(ZEPSW,AMIN1(1.,(PWSM1M(JL)-ZWPWP)*ZQWEVAP))
               ZWET(JL)=ZRS0(JL)/ZSOIL
               LO=PQM1(JL,KLEV).GT.ZQS(JL)
               IF (LO) ZWET(JL)=0.
            ENDIF
         ENDDO
      ENDIF
CSH }
C
C***
      IF (LVDIFF) THEN

C***
C
C     ------------------------------------------------------------------
C
C*         3.     COMPUTATION OF THE EXCHANGE COEFFICIENTS.
C                 ----------- -- --- -------- -------------
C
C        THE SURFACE LAYER IS NOW COMPUTED BEFORE THE OTHER LEVELS
C
C*       3.1       COMPUTATION OF BASIC QUANTITIES: WIND SHEAR,
C*                 RICHARDSON NUMBER,SQUARED MIXING LENGTHS, UNSTABLE
C*                 AND STABLE CASE COMMON FACTORS AND NEUTRAL CASE
C*                 COMMON PART OF THE DRAG COEFFICIENTS.
C
         DO JL=KIDIA,KFDIA
            ZDU2=AMAX1(ZEPDU2,PUM1(JL,KLEV)**2+PVM1(JL,KLEV)**2)
C
C     MODIFIED RICHARDSON NUMBER FOR SURFACE FLUXES
C
CTS
CTS   LAND
CTS
            IF (LOLAND(JL)) THEN
CTS 170100
               ZQMITTE=(PQM1(JL,KLEV)+ZQS(JL)*ZHSOIL(JL))/2.
               ZQTMIT=(PXM1(JL,KLEV)+PXIM1(JL,KLEV))*0.5+ZQMITTE
CTS CHANGES FOR LAND-/SEA-/SEAICE DIFFERENTIATION
               ZTMIT=(PTM1(JL,KLEV)+PTSLM1M(JL))/2.
CTS
               ZTEMITTE=(ZTETA1(JL,KLEV)+ZTESS(JL))/2.
               ZVIRMITTE=(ZTVIR1(JL,KLEV)+ZTVS(JL))/2.
               ZQSMIT=(ZQSS(JL,KLEV)+ZQS(JL))/2.
               ZQLWI1=PQM1(JL,KLEV)+(PXM1(JL,KLEV)+PXIM1(JL,KLEV))
               ZQLWI2=ZQS(JL)*ZHSOIL(JL)
               ZFUX=ZFAXE(JL,KLEV)/(ZCPD*ZTMIT)
               ZFOX=ZFAXE(JL,KLEV)/(ZRD*ZTMIT)
               ZMULT1=1.+VTMPC1*ZQTMIT
               ZMULT2=ZFUX*ZMULT1-ZRVRD
               ZMULT3=ZRDRV*ZFOX*ZQSMIT/(1.+ZRDRV*ZFOX*ZFUX*ZQSMIT)
               ZMULT5=ZMULT1-ZMULT2*ZMULT3
               ZMULT4=ZFUX*ZMULT5-1.
C
               ZDUS1=PACLC(JL,KLEV)*ZMULT5+(1.-PACLC(JL,KLEV))*ZMULT1
               ZDUS2=PACLC(JL,KLEV)*ZMULT4+(1.-PACLC(JL,KLEV))*VTMPC1
               ZTELDIF=ZLTETA1(JL,KLEV)-ZTESS(JL)
               ZQDDIF=ZQLWI1-ZQLWI2
               ZBUOY=ZDUS1*ZTELDIF+ZDUS2*ZTEMITTE*ZQDDIF
C
               ZRI(JL)=PGEOM1(JL,KLEV)*ZBUOY/(ZVIRMITTE*ZDU2)
               ZRICLS(JL)=ZRI(JL)
CTS
CTS   DRAG COEFFICIENTS
CTS
CTS   LAND
CTS
               ZCDN(JL)=(ZKAP/ALOG(1.+PGEOM1(JL,KLEV)/(G*PAZ0L(JL))))**2
CDJ   RESTRICTION OF Z0 FOR HEAT AND MOISTURE OVER LAND
               Z0H=AMIN1(PAZ0L(JL),0.1)
               ZALO=ALOG  (1.+PGEOM1(JL,KLEV)/(G*PAZ0L(JL)))
               ZALOH=ALOG  (1.+PGEOM1(JL,KLEV)/(G*Z0H))
               ZCHN(JL)=ZKAP**2/(ZALO*ZALOH)
               ZUCF(JL)=1./(1.+ZCONS11*ZCDN(JL)*SQRT  (ABS(ZRI(JL))*(1.
     &              +PGEOM1(JL,KLEV)/(G*PAZ0L(JL)))))
               ZSCF(JL)=SQRT  (1.+ABS(ZRI(JL)))
CDJ CHANGES FOR REMO1.0
               ZCONS=ZCONS12*PAPHM1(JL,KLEVP1)/
     &              (PTM1(JL,KLEV)*(1.+VTMPC1*PQM1(JL,KLEV)
     &              -(PXM1(JL,KLEV)+PXIM1(JL,KLEV))))
CDJ 10.10.94
               ZCFNC(JL)=ZCONS*SQRT  (ZDU2)*ZCDN(JL)
               ZCFNCH(JL)=ZCONS*SQRT  (ZDU2)*ZCHN(JL)
               ZDTHV=AMAX1(0.,(ZTVS(JL)-ZTVIR1(JL,KLEV)))
               ZWST(JL)=ZDTHV*SQRT  (ZDU2)/ZVIRMITTE
C
C        CANOPY RESISTANCE
C
               ZWET(JL)=ZWET(JL)/ZCONS
               ZRS0(JL)=ZRS0(JL)/ZCONS
CSH      *** ZWISCHENSPEICHERN DES TRANSPIRATIONSFAKTORS
               ZTRFAK(JL) = ZWET(JL)
            ENDIF
CTS
CTS   WATER
CTS
            IF (LOSEA(JL)) THEN
               ZQMITTE=(PQM1(JL,KLEV)+ZQW(JL))/2.
               ZQTMIT=(PXM1(JL,KLEV)+PXIM1(JL,KLEV))*0.5+ZQMITTE
               ZTMIT=(PTM1(JL,KLEV)+PTSWM1M(JL))/2.
               ZTEMITTE=(ZTETA1(JL,KLEV)+ZTESW(JL))/2.
               ZVIRMITTE=(ZTVIR1(JL,KLEV)+ZTVW(JL))/2.
               ZQSMIT=(ZQSS(JL,KLEV)+ZQW(JL))/2.
               ZQLWI1=PQM1(JL,KLEV)+(PXM1(JL,KLEV)+PXIM1(JL,KLEV))
               ZQLWI2=ZQW(JL)
               ZFUX=ZFAXE(JL,KLEV)/(ZCPD*ZTMIT)
               ZFOX=ZFAXE(JL,KLEV)/(ZRD*ZTMIT)
               ZMULT1=1.+VTMPC1*ZQTMIT
               ZMULT2=ZFUX*ZMULT1-ZRVRD
               ZMULT3=ZRDRV*ZFOX*ZQSMIT/(1.+ZRDRV*ZFOX*ZFUX*ZQSMIT)
               ZMULT5=ZMULT1-ZMULT2*ZMULT3
               ZMULT4=ZFUX*ZMULT5-1.
CTS
               ZDUS1=PACLC(JL,KLEV)*ZMULT5+(1.-PACLC(JL,KLEV))*ZMULT1
               ZDUS2=PACLC(JL,KLEV)*ZMULT4+(1.-PACLC(JL,KLEV))*VTMPC1
               ZTELDIF=ZLTETA1(JL,KLEV)-ZTESW(JL)
               ZQDDIF=ZQLWI1-ZQLWI2
               ZBUOY=ZDUS1*ZTELDIF+ZDUS2*ZTEMITTE*ZQDDIF
CTS
               ZRIW(JL)=PGEOM1(JL,KLEV)*ZBUOY/(ZVIRMITTE*ZDU2)
               ZRICLW(JL)=ZRIW(JL)
CTS
CTS   DRAG COEFFICIENTS
CTS
CTS   WATER
CTS
               ZCDNW(JL)=
     &              (ZKAP/ALOG(1.+PGEOM1(JL,KLEV)/(G*PAZ0W(JL))))**2
               Z0H=PAZ0W(JL)*EXP  (2.-86.276*PAZ0W(JL)**0.375)
               ZALO=ALOG  (1.+PGEOM1(JL,KLEV)/(G*PAZ0W(JL)))
               ZALOH=ALOG  (1.+PGEOM1(JL,KLEV)/(G*Z0H))
               ZCHNW(JL)=ZKAP**2/(ZALO*ZALOH)
               ZUCFW(JL)=1./(1.+ZCONS11*ZCDNW(JL)*SQRT(ABS(ZRIW(JL))*(1.
     &              +PGEOM1(JL,KLEV)/(G*PAZ0W(JL)))))
               ZSCFW(JL)=SQRT  (1.+ABS(ZRIW(JL)))
               ZCONS=ZCONS12*PAPHM1(JL,KLEVP1)/
     &              (PTM1(JL,KLEV)*(1.+VTMPC1*PQM1(JL,KLEV)
     &              -(PXM1(JL,KLEV)+PXIM1(JL,KLEV))))
               ZCFNCW(JL)=ZCONS*SQRT  (ZDU2)*ZCDNW(JL)
               ZCFNCWH(JL)=ZCONS*SQRT  (ZDU2)*ZCHNW(JL)
               ZDTHV=AMAX1(0.,(ZTVW(JL)-ZTVIR1(JL,KLEV)))
               ZWSTW(JL)=ZDTHV*SQRT  (ZDU2)/ZVIRMITTE
               ZCR(JL)=
     &              (ZFREEC/(ZCHNW(JL)*SQRT  (ZDU2)))*ABS(ZBUOY)**ZCONS6
            ENDIF
CTS
CTS   SEAICE
CTS
            IF (LOICE(JL)) THEN
               ZQMITTE=(PQM1(JL,KLEV)+ZQI(JL))/2.
               ZQTMIT=(PXM1(JL,KLEV)+PXIM1(JL,KLEV))*0.5+ZQMITTE
               ZTMIT=(PTM1(JL,KLEV)+PTSIM1M(JL))/2.
               ZTEMITTE=(ZTETA1(JL,KLEV)+ZTESI(JL))/2.
               ZVIRMITTE=(ZTVIR1(JL,KLEV)+ZTVI(JL))/2.
               ZQSMIT=(ZQSS(JL,KLEV)+ZQI(JL))/2.
               ZQLWI1=PQM1(JL,KLEV)+(PXM1(JL,KLEV)+PXIM1(JL,KLEV))
               ZQLWI2=ZQI(JL)
               ZFUX=ZFAXE(JL,KLEV)/(ZCPD*ZTMIT)
               ZFOX=ZFAXE(JL,KLEV)/(ZRD*ZTMIT)
               ZMULT1=1.+VTMPC1*ZQTMIT
               ZMULT2=ZFUX*ZMULT1-ZRVRD
               ZMULT3=ZRDRV*ZFOX*ZQSMIT/(1.+ZRDRV*ZFOX*ZFUX*ZQSMIT)
               ZMULT5=ZMULT1-ZMULT2*ZMULT3
               ZMULT4=ZFUX*ZMULT5-1.
CTS
               ZDUS1=PACLC(JL,KLEV)*ZMULT5+(1.-PACLC(JL,KLEV))*ZMULT1
               ZDUS2=PACLC(JL,KLEV)*ZMULT4+(1.-PACLC(JL,KLEV))*VTMPC1
               ZTELDIF=ZLTETA1(JL,KLEV)-ZTESI(JL)
               ZQDDIF=ZQLWI1-ZQLWI2
               ZBUOY=ZDUS1*ZTELDIF+ZDUS2*ZTEMITTE*ZQDDIF
CTS
               ZRII(JL)=PGEOM1(JL,KLEV)*ZBUOY/(ZVIRMITTE*ZDU2)
               ZRICLI(JL)=ZRII(JL)
CTS
CTS   DRAG COEFFICIENTS
CTS
CTS   SEAICE
CTS
               ZCDNI(JL)=
     &              (ZKAP/ALOG(1.+PGEOM1(JL,KLEV)/(G*PAZ0I(JL))))**2
               Z0H=PAZ0I(JL)
               ZALO=ALOG  (1.+PGEOM1(JL,KLEV)/(G*PAZ0I(JL)))
               ZALOH=ALOG  (1.+PGEOM1(JL,KLEV)/(G*Z0H))
               ZCHNI(JL)=ZKAP**2/(ZALO*ZALOH)
               ZUCFI(JL)=1./(1.+ZCONS11*ZCDNI(JL)*SQRT(ABS(ZRII(JL))*(1.
     &              +PGEOM1(JL,KLEV)/(G*PAZ0I(JL)))))
               ZSCFI(JL)=SQRT  (1.+ABS(ZRII(JL)))
               ZCONS=ZCONS12*PAPHM1(JL,KLEVP1)/
     &              (PTM1(JL,KLEV)*(1.+VTMPC1*PQM1(JL,KLEV)
     &              -(PXM1(JL,KLEV)+PXIM1(JL,KLEV))))
               ZCFNCI(JL)=ZCONS*SQRT  (ZDU2)*ZCDNI(JL)
               ZCFNCIH(JL)=ZCONS*SQRT  (ZDU2)*ZCHNI(JL)
               ZDTHV=AMAX1(0.,(ZTVI(JL)-ZTVIR1(JL,KLEV)))
               ZWSTI(JL)=ZDTHV*SQRT  (ZDU2)/ZVIRMITTE
               ZCRI(JL)=
     &              (ZFREEC/(ZCHNI(JL)*SQRT  (ZDU2)))*ABS(ZBUOY)**ZCONS6
            ENDIF
CTS 170100
         ENDDO
C
C*    3.2  DIMENSIONLESS HEAT TRANSFER COEFFICIENTS MULTIPLIED
C*         BY PRESSURE THICKNESSES FOR MOMENTUM AND HEAT EXCHANGE
C
         DO JL=KIDIA,KFDIA
CTS
CTS   LAND
CTS
            IF (LOLAND(JL)) THEN
               IF (ZRI(JL).GE.0.) THEN
                  ZCFML(JL)=ZCFNC(JL)/(1.+ZCONS8*ZRI(JL)/ZSCF(JL))
                  ZCFHL(JL)=ZCFNCH(JL)/(1.+ZCONS8*ZRI(JL)*ZSCF(JL))
                  ZCHL(JL)=ZCFHL(JL)/ZCFNCH(JL)*ZCHN(JL)
               ELSE
                  ZCFML(JL)=ZCFNC(JL)*(1.-ZCONS8*ZRI(JL)*ZUCF(JL))
                  ZCFHL(JL)=ZCFNCH(JL)*(1.-ZCONS8*ZRI(JL)*ZUCF(JL))
                  ZCHL(JL)=ZCFHL(JL)/ZCFNCH(JL)*ZCHN(JL)
               ENDIF
               PZ2ZML(JL)=ZCFML(JL)*ZCONS28
               PZ2ZHL(JL)=ZCFHL(JL)*ZCONS28
            ELSE
               ZCFML(JL)=0.0
               ZCFHL(JL)=0.0
            ENDIF
CTS
CTS   WATER
CTS
            IF (LOSEA(JL)) THEN
               IF (ZRIW(JL).GE.0.) THEN
                  ZCFMW(JL)=ZCFNCW(JL)/(1.+ZCONS8*ZRIW(JL)/ZSCFW(JL))
                  ZCFHW(JL)=ZCFNCWH(JL)/(1.+ZCONS8*ZRIW(JL)*ZSCFW(JL))
                  ZCHW(JL)=ZCFHW(JL)/ZCFNCWH(JL)*ZCHNW(JL)
               ELSE
                  ZCFMW(JL)=ZCFNCW(JL)*(1.-ZCONS8*ZRIW(JL)*ZUCFW(JL))
                  ZCFHW(JL)=ZCFNCWH(JL)*((1.+ZCR(JL)**ZGAM)**Z1DGAM)
                  ZCHW(JL)=ZCFHW(JL)/ZCFNCWH(JL)*ZCHNW(JL)
               ENDIF
               PZ2ZMW(JL)=ZCFMW(JL)*ZCONS28
               PZ2ZHW(JL)=ZCFHW(JL)*ZCONS28
            ELSE
               ZCFMW(JL)=0.0
               ZCFHW(JL)=0.0
            ENDIF
CTS
CTS   SEAICE
CTS
            IF (LOICE(JL)) THEN
               IF (ZRII(JL).GE.0.) THEN
                  ZCFMI(JL)=ZCFNCI(JL)/(1.+ZCONS8*ZRII(JL)/ZSCFI(JL))
                  ZCFHI(JL)=ZCFNCIH(JL)/(1.+ZCONS8*ZRII(JL)*ZSCFI(JL))
                  ZCHI(JL)=ZCFHI(JL)/ZCFNCIH(JL)*ZCHNI(JL)
               ELSE
                  ZCFMI(JL)=ZCFNCI(JL)*(1.-ZCONS8*ZRII(JL)*ZUCFI(JL))
                  ZCFHI(JL)=ZCFNCIH(JL)*((1.+ZCRI(JL)**ZGAM)**Z1DGAM)
                  ZCHI(JL)=ZCFHI(JL)/ZCFNCIH(JL)*ZCHNI(JL)
               ENDIF
               PZ2ZMI(JL)=ZCFMI(JL)*ZCONS28
               PZ2ZHI(JL)=ZCFHI(JL)*ZCONS28
            ELSE
               ZCFMI(JL)=0.0
               ZCFHI(JL)=0.0
            ENDIF
CTS
CTS   INTERPOLATIONFUNCTIONS FOR DIAGNOSTICS
CTS
CTS   LAND
CTS
            IF (LOLAND(JL)) THEN
               ZBN(JL)=ZKAP/SQRT  (ZCDN(JL))
               ZBM(JL)=AMAX1(ZEPSEC,SQRT  (ZCFML(JL)*ZCDN(JL)*
     &              ZCONS17/ZCFNC(JL)))
               ZBH(JL)=AMAX1(ZEPSEC,ZCHL(JL)/ZBM(JL)*ZCONS17)
               ZBM(JL)=1./ZBM(JL)
               ZBH(JL)=1./ZBH(JL)
            ENDIF
CTS
CTS   WATER
CTS
            IF (LOSEA(JL)) THEN
               ZBNW(JL)=ZKAP/SQRT  (ZCDNW(JL))
               ZBMW(JL)=AMAX1(ZEPSEC,SQRT  (ZCFMW(JL)*ZCDNW(JL)*
     &              ZCONS17/ZCFNCW(JL)))
               ZBHW(JL)=AMAX1(ZEPSEC,ZCHW(JL)/ZBMW(JL)*ZCONS17)
               ZBMW(JL)=1./ZBMW(JL)
               ZBHW(JL)=1./ZBHW(JL)
            ENDIF
CTS
CTS   SEAICE
CTS
            IF (LOICE(JL)) THEN
               ZBNI(JL)=ZKAP/SQRT  (ZCDNI(JL))
               ZBMI(JL)=AMAX1(ZEPSEC,SQRT  (ZCFMI(JL)*ZCDNI(JL)*
     &              ZCONS17/ZCFNCI(JL)))
               ZBHI(JL)=AMAX1(ZEPSEC,ZCHI(JL)/ZBMI(JL)*ZCONS17)
               ZBMI(JL)=1./ZBMI(JL)
               ZBHI(JL)=1./ZBHI(JL)
            ENDIF
CTS 170100
         ENDDO
C   -----------------------------------------------------------------
CTS
CTS       3.3       EQUIVALENT EVAPOTRANSPIRATION EFFICIENCY COEFFICIENT
CTS                 OVER LAND
CTS
         DO JL=KIDIA,KFDIA
            IF (LOLAND(JL)) THEN
               ZWET(JL)=PCVS(JL)+(1.-PCVS(JL))*(PCVW(JL)+(1.-PCVW(JL))/
     &              (1.+ZCFHL(JL)*ZTRFAK(JL)))
C     *         (1.+ZCFHL(JL)*ZWET(JL)))
               LO=ZHUM(JL).LE.PQM1(JL,KLEV)/ZQS(JL)
               IF (LO) THEN
                  ZCSAT(JL)=PCVS(JL)+
     &                 (1.-PCVS(JL))*(PCVW(JL)+(1.-PCVW(JL))*0.)
               ELSE
                  ZCSAT(JL)=PCVS(JL)+
     &                 (1.-PCVS(JL))*(PCVW(JL)+(1.-PCVW(JL))*ZHUM(JL))
               ENDIF
               IF (LO) THEN
                  ZCAIR(JL)=PCVS(JL)+
     &                 (1.-PCVS(JL))*(PCVW(JL)+(1.-PCVW(JL))*0.)
               ELSE
                  ZCAIR(JL)=PCVS(JL)+
     &                 (1.-PCVS(JL))*(PCVW(JL)+(1.-PCVW(JL))*1.)
               ENDIF
               LO=PQM1(JL,KLEV).GT.ZQS(JL)
               IF (LO) ZCSAT(JL)=1.
               IF (LO) ZCAIR(JL)=1.
               ZCSAT(JL)=PVGRAT(JL)*ZWET(JL)+(1.-PVGRAT(JL))*ZCSAT(JL)
               ZCAIR(JL)=PVGRAT(JL)*ZWET(JL)+(1.-PVGRAT(JL))*ZCAIR(JL)
               ZCPTS(JL)=PTSLM1M(JL)*CPD*(1.+VTMPC2*
     &              (ZCSAT(JL)*ZQS(JL)+(1.-ZCAIR(JL))*PQM1(JL,KLEV)))
            ELSE
               ZCSAT(JL)=0.0
               ZCAIR(JL)=0.0
               ZCPTS(JL)=0.0
            ENDIF
CTS 170100
         ENDDO
CTS CHANGES FOR LAND-/SEA-/SEAICE DIFFERENTIATION
C
C     AGGREGATED EXCHANGE COEFFICIENTS AND EFFECTIVE SURFACE VALUES
C
         DO JL=KIDIA,KFDIA
            ZCFM(JL,KLEV)=(FLOAT(INFRL(JL))*ZCFML(JL)
     &                   + FLOAT(INFRW(JL))*ZCFMW(JL)
     &                   + FLOAT(INFRI(JL))*ZCFMI(JL))*EDFAKINF
            PZ2ZM(JL,KLEV)=(FLOAT(INFRL(JL))*PZ2ZML(JL)
     &                    + FLOAT(INFRW(JL))*PZ2ZMW(JL)
     &                    + FLOAT(INFRI(JL))*PZ2ZMI(JL))*EDFAKINF
            ZCDUM(JL,KLEV)=ZCFM(JL,KLEV)
            ZCFH(JL,KLEV)=(FLOAT(INFRL(JL))*ZCFHL(JL)
     &                   + FLOAT(INFRW(JL))*ZCFHW(JL)
     &                   + FLOAT(INFRI(JL))*ZCFHI(JL))*EDFAKINF
            PZ2ZH(JL,KLEV)=(FLOAT(INFRL(JL))*PZ2ZHL(JL)
     &                    + FLOAT(INFRW(JL))*PZ2ZHW(JL)
     &                    + FLOAT(INFRI(JL))*PZ2ZHI(JL))*EDFAKINF
C
            IF (LOSEA(JL)) THEN
               ZCPTW(JL)=PTSWM1M(JL)*CPD*(1.+VTMPC2*ZQW(JL))
            ELSE
               ZCPTW(JL)=0.0
            ENDIF
            IF (LOICE(JL)) THEN
               ZCPTI(JL)=PTSIM1M(JL)*CPD*(1.+VTMPC2*ZQI(JL))
            ELSE
               ZCPTI(JL)=0.0
            ENDIF
            ZCPTE(JL)=(FLOAT(INFRL(JL))*ZCFHL(JL)*ZCPTS(JL)
     &               + FLOAT(INFRW(JL))*ZCFHW(JL)*ZCPTW(JL)
     &               + FLOAT(INFRI(JL))*ZCFHI(JL)*ZCPTI(JL))
     &               /(ZCFH(JL,KLEV)*FAKINF)
C
         ENDDO
CTS 240100
C
C*       3.4       COMPUTATION OF THE PBL EXTENSION.
C
         DO JL=KIDIA,KFDIA
            ZDU2=AMAX1(ZEPDU2,PUM1(JL,KLEV)**2+PVM1(JL,KLEV)**2)
CJHC
C
C     ------------------------------------------------
C     ECHAM CORIOLIS-FUNCTION CHANGED INTO HIRLAM SINLAT ARRAY
C     ------------------------------------------------
C
            ZCOR=AMAX1(ABS(2.*OMEGA*PSINLAT(JL)),ZEPCOR)
C     ZCOR=AMAX1(ABS(CORIOL(IROW)),ZEPCOR)
CJHC
CTS CHANGES FOR LAND-/SEA-/SEAICE DIFFERENTIATION
C*    LAND
            IF (LOLAND(JL)) THEN
               LO=PAZ0L(JL).GT.ZEPZ0O
CTS 240100
               IF (LO) THEN
                  ZCDN2M=(ZKAP/ALOG  (1.+PGEOM1(JL,KLEV)/(G*ZEPZ0O)))**2
               ELSE
                  ZCDN2M=ZCDN(JL)
               ENDIF
               ZCDNR=ZCDN2M/ZCDN(JL)
               IF (LO.AND.ZRI(JL).LT.0.) THEN
                  ZCFM2M=ZCFNC(JL)*ZCDNR*(1.-ZCONS8*ZRI(JL)/(1.+ZCONS11*
     &                 ZCDN2M*SQRT(ABS(ZRI(JL))*
     &                 (1.+PGEOM1(JL,KLEV)/(G*ZEPZ0O)))))
               ELSE
                  ZCFM2M=ZCFML(JL)*ZCDNR
               ENDIF
CTS CHANGES FOR LAND-/SEA-/SEAICE DIFFERENTIATION
               ZUSTL=ZCFM2M*SQRT  (ZDU2)
               ZUSTAR(JL)=SQRT  (ZUSTL*PTM1(JL,KLEV)*
     &              (1.+VTMPC1*PQM1(JL,KLEV)-
     &              (PXM1(JL,KLEV)+PXIM1(JL,KLEV)))
     &              /(ZCONS12*PAPHM1(JL,KLEVP1)))
            ELSE
               ZUSTL=0.0
            ENDIF
C*    WATER
            IF (LOSEA(JL)) THEN
               LO=PAZ0W(JL).GT.ZEPZ0O
               IF (LO) THEN
                  ZCDN2M=(ZKAP/ALOG  (1.+PGEOM1(JL,KLEV)/(G*ZEPZ0O)))**2
               ELSE
                  ZCDN2M=ZCDNW(JL)
               ENDIF
               ZCDNR=ZCDN2M/ZCDNW(JL)
               IF (LO.AND.ZRIW(JL).LT.0.) THEN
                  ZCFM2M=ZCFNCW(JL)*ZCDNR*(1.-ZCONS8*ZRIW(JL)/
     &                 (1.+ZCONS11*ZCDN2M*SQRT(ABS(ZRIW(JL))
     &                 *(1.+PGEOM1(JL,KLEV)/(G*ZEPZ0O)))))
               ELSE
                  ZCFM2M=ZCFMW(JL)*ZCDNR
               ENDIF
               ZUSTW=ZCFM2M*SQRT  (ZDU2)
               ZUSTARW(JL)=SQRT  (ZUSTW*PTM1(JL,KLEV)*
     &              (1.+VTMPC1*PQM1(JL,KLEV)-
     &              (PXM1(JL,KLEV)+PXIM1(JL,KLEV)))
     &              /(ZCONS12*PAPHM1(JL,KLEVP1)))
            ELSE
               ZUSTW=0.0
            ENDIF
C*    SEAICE
            IF (LOICE(JL)) THEN
               LO=PAZ0I(JL).GT.ZEPZ0O
               IF (LO) THEN
                  ZCDN2M=(ZKAP/ALOG  (1.+PGEOM1(JL,KLEV)/(G*ZEPZ0O)))**2
               ELSE
                  ZCDN2M=ZCDNI(JL)
               ENDIF
               ZCDNR=ZCDN2M/ZCDNI(JL)
               IF (LO.AND.ZRII(JL).LT.0.) THEN
                  ZCFM2M=ZCFNCI(JL)*ZCDNR*(1.-ZCONS8*ZRII(JL)/
     &                 (1.+ZCONS11*ZCDN2M*SQRT(ABS(ZRII(JL))*
     &                 (1.+PGEOM1(JL,KLEV)/(G*ZEPZ0O)))))
               ELSE
                  ZCFM2M=ZCFMI(JL)*ZCDNR
               ENDIF
               ZUSTI=ZCFM2M*SQRT  (ZDU2)
               ZUSTARI(JL)=SQRT  (ZUSTI*PTM1(JL,KLEV)*
     &              (1.+VTMPC1*PQM1(JL,KLEV)-
     &              (PXM1(JL,KLEV)+PXIM1(JL,KLEV)))
     &              /(ZCONS12*PAPHM1(JL,KLEVP1)))
            ELSE
               ZUSTI=0.0
            ENDIF
C
            ZUST=(FLOAT(INFRL(JL))*ZUSTL+FLOAT(INFRW(JL))*ZUSTW+
     &            FLOAT(INFRI(JL))*ZUSTI)*EDFAKINF
C
CTS 240100
            ZUSTARM=SQRT  (ZUST*PTM1(JL,KLEV)*
     &           (1.+VTMPC1*PQM1(JL,KLEV)-
     &           (PXM1(JL,KLEV)+PXIM1(JL,KLEV)))
     &           /(ZCONS12*PAPHM1(JL,KLEVP1)))
CTS CHANGES FOR LAND-/SEA-/SEAICE DIFFERENTIATION
            ZHDYN(JL)=AMIN1(PGEOM1(JL,1)/G,ZCHNEU*ZUSTARM/ZCOR)
CTS 240100
C
            IHPBLC(JL)=KLEV
            IHPBLD(JL)=KLEV
         ENDDO
C
         DO JK=KLEVM1,1,-1
            DO JL=KIDIA,KFDIA
               ZDS=ZCPTGZ(JL,JK)-ZCPTGZ(JL,KLEV)
               ZDZ=PGEOM1(JL,JK)/G-ZHDYN(JL)
               IF (IHPBLC(JL).EQ.KLEV.AND.ZDS.GT.0.) IHPBLC(JL)=JK
               IF (IHPBLD(JL).EQ.KLEV.AND.ZDZ.GE.0.) IHPBLD(JL)=JK
            ENDDO
         ENDDO
C
C      CONVECTIVE VELOCITY SCALE, MONIN-OBUKHOV LENGTH AND
C      TKE BOUNDARY CONDITION (MAILHOT/BENOIT, 1982)

         DO JL=KIDIA,KFDIA
            IHPBL(JL)=MIN0(IHPBLC(JL),IHPBLD(JL),KLEV-3)
            ZGHABL=AMIN1(50000.,PGEOM1(JL,IHPBL(JL)))
            PGHPBL(JL)=ZGHABL
CTS CHANGES FOR LAND-/SEA-/SEAICE DIFFERENTIATION
C*    LAND
            IF (LOLAND(JL)) THEN
CTS 240100
               IF(ZWST(JL).GT.ZEPSR) THEN
CTS CHANGES FOR LAND-/SEA-/SEAICE DIFFERENTIATION
                  ZCONVS=(ZWST(JL)*ZCHL(JL)*ZGHABL)**ZCONS6
                  ZMONOB=(ZUSTAR(JL)**3)/(ZKAP*G*ZWST(JL)*ZCHL(JL))
CTS 240100
                  ZSTABF=(PGEOM1(JL,KLEV)/(G*ZMONOB))**(ZCONS6*2.)
                  ZSTABF=AMIN1(ZUSTF*3.,ZSTABF)
               ELSE
                  ZCONVS=0.
                  ZSTABF=0.
               ENDIF
CTS CHANGES FOR LAND-/SEA-/SEAICE DIFFERENTIATION
               ZTKEVL=(ZUSTF+ZSTABF)*(ZUSTAR(JL)**2)
     &              +ZWSTF*(ZCONVS**2)
            ELSE
               ZTKEVL = 0.0
            ENDIF
C*    WATER
            IF (LOSEA(JL)) THEN
               IF(ZWSTW(JL).GT.ZEPSR) THEN
                  ZCONVS=(ZWSTW(JL)*ZCHW(JL)*ZGHABL)**ZCONS6
                  ZMONOB=(ZUSTARW(JL)**3)/(ZKAP*G*ZWSTW(JL)*ZCHW(JL))
                  ZSTABF=(PGEOM1(JL,KLEV)/(G*ZMONOB))**(ZCONS6*2.)
                  ZSTABF=AMIN1(ZUSTF*3.,ZSTABF)
               ELSE
                  ZCONVS=0.
                  ZSTABF=0.
               ENDIF
               ZTKEVW=(ZUSTF+ZSTABF)*(ZUSTARW(JL)**2)
     &              +ZWSTF*(ZCONVS**2)
            ELSE
               ZTKEVW = 0.0
            ENDIF
C*    SEAICE
            IF (LOICE(JL)) THEN
               IF(ZWSTI(JL).GT.ZEPSR) THEN
                  ZCONVS=(ZWSTI(JL)*ZCHI(JL)*ZGHABL)**ZCONS6
                  ZMONOB=(ZUSTARI(JL)**3)/(ZKAP*G*ZWSTI(JL)*ZCHI(JL))
                  ZSTABF=(PGEOM1(JL,KLEV)/(G*ZMONOB))**(ZCONS6*2.)
                  ZSTABF=AMIN1(ZUSTF*3.,ZSTABF)
               ELSE
                  ZCONVS=0.
                  ZSTABF=0.
               ENDIF
               ZTKEVI=(ZUSTF+ZSTABF)*(ZUSTARI(JL)**2)
     &              +ZWSTF*(ZCONVS**2)
            ELSE
               ZTKEVI = 0.0
            ENDIF
            ZTKEVN(JL,KLEV)=(FLOAT(INFRL(JL))*ZTKEVL
     &                     + FLOAT(INFRW(JL))*ZTKEVW
     &                     + FLOAT(INFRI(JL))*ZTKEVI)*EDFAKINF
            ZTKEVN(JL,KLEV)=AMAX1(ZTKEMIN,ZTKEVN(JL,KLEV))
CTS 240100
         ENDDO
C
         IF(NSTEP.EQ.NSTART) THEN
            DO JL=KIDIA,KFDIA
               PTKEM1M(JL,KLEV)=ZTKEVN(JL,KLEV)
               PTKEM(JL,KLEV)=ZTKEVN(JL,KLEV)
            ENDDO
         ENDIF
C*       3.5       VERTICAL LOOP.
C
C***
         DO JK=KTDIA,KLEVM1
C***
C
C*       3.6       COMPUTATION OF BASIC QUANTITIES: WIND SHEAR,
C*                 BUOYANCY, RICHARDSON NUMBER, MIXING LENGTHS.
C
C     MODIFIED RICHARDSON NUMBER IN VERTICAL LOOP
C
!DIR$ IVDEP
            DO JL=KIDIA,KFDIA
               ZQTMIT=ZLWCMIT(JL,JK)+ZQMIT(JL,JK)
               ZFUX=ZFAXEN(JL,JK)/(ZCPD*ZTMITTE(JL,JK))
               ZFOX=ZFAXEN(JL,JK)/(ZRD*ZTMITTE(JL,JK))
               ZMULT1=1.+VTMPC1*ZQTMIT
               ZMULT2=ZFUX*ZMULT1-ZRVRD
               ZMULT3=ZRDRV*ZFOX*ZQSSM(JL,JK)/
     &              (1.+ZRDRV*ZFUX*ZFOX*ZQSSM(JL,JK))
               ZMULT5=ZMULT1-ZMULT2*ZMULT3
               ZMULT4=ZFUX*ZMULT5-1.
C
               ZDUS1=ZCCOVER(JL,JK)*ZMULT5+(1.-ZCCOVER(JL,JK))*ZMULT1
               ZDUS2=ZCCOVER(JL,JK)*ZMULT4+(1.-ZCCOVER(JL,JK))*VTMPC1
               ZTELDIF=(ZLTETA1(JL,JK)-ZLTETA1(JL,JK+1))/ZHH(JL,JK)*G
               ZDQTOT=(PQM1(JL,JK)+(PXM1(JL,JK)+PXIM1(JL,JK)))
     &              -(PQM1(JL,JK+1)+(PXM1(JL,JK+1)+PXIM1(JL,JK+1)))
               ZQDDIF=ZDQTOT/ZHH(JL,JK)*G
               ZBUOY=(ZTELDIF*ZDUS1+ZTEMIT(JL,JK)*ZDUS2*
     &              ZQDDIF)*G/ZTVIRMIT(JL,JK)
               ZDIVV=(PUM1(JL,JK)-PUM1(JL,JK+1))**2
               ZDIVV1=(PVM1(JL,JK)-PVM1(JL,JK+1))**2
               ZSHEAR=(ZDIVV+ZDIVV1)*(G/ZHH(JL,JK))**2
               ZRI(JL)=ZBUOY/AMAX1(ZSHEAR,ZEPSHR)
C
C     ASYMPTOTIC MIXING LENGTH FOR MOMENTUM (ZLAMM) AND
C     HEAT (ZLAMH) ABOVE THE PBL AS A FUNCTION OF HEIGHT
C     ACCORDING TO HOLTSLAG AND BOVILLE (1992), J. CLIMATE.
               ZHEXP=EXP  (1.-PGEOM1(JL,JK)/PGEOM1(JL,IHPBL(JL)))
               ZLAM=ZZZLAM+(ZCONS3-ZZZLAM)*ZHEXP
               IF(JK.GE.IHPBL(JL)) THEN
                  ZCONS23=ZCONS25
               ELSE
                  ZCONS23=ZCONS2/ZLAM
               END IF
C
C     MIXING LENGTH (BLACKADAR) + STABILITY DEPENDENT FUNCTION
C
               Z2GEOMF=PGEOM1(JL,JK)+PGEOM1(JL,JK+1)
               ZZ2GEO=ZCONS2*Z2GEOMF
               ZMIX=ZZ2GEO/(1.+ZCONS23*Z2GEOMF)
C
C      STABILITY FUNCTIONS (LOUIS, 1979)
C
               ZALH2=ZMIX*ZMIX
               ZUCF(JL)=1./(1.+ZCONS5*ZALH2*SQRT(ABS(ZRI(JL))
     &              *(((PGEOM1(JL,JK)/PGEOM1(JL,JK+1))**ZCONS6-1.)
     &              /(PGEOM1(JL,JK)-PGEOM1(JL,JK+1)))**3
     &              /(PGEOM1(JL,JK+1))))
               IF(ZRI(JL).LT.0.) THEN
                  ZSH=ZSHN*(1.-ZCONS9*ZRI(JL)*ZUCF(JL))
                  ZSM=ZSMN*(1.-ZCONS8*ZRI(JL)*ZUCF(JL))
               ELSE
                  ZSH=ZSHN/(1.+ZCONS9*ZRI(JL)*SQRT  (1.+ZD*ZRI(JL)))
                  ZSM=ZSMN/(1.+ZCONS8*ZRI(JL)/SQRT  (1.+ZRI(JL)))
               ENDIF
C
C
C*       3.7       DIMENSIONLESS COEFFICIENTS MULTIPLIED BY PRESSURE
C*                 THICKNESSES FOR MOMENTUM AND HEAT EXCHANGE.
C
               ZZB=ZSHEAR*ZMIX*ZSM-ZBUOY*ZMIX*ZSH
               ZDISL=ZDA1*ZMIX/ZTMST
               ZKTEST=1.+(ZZB*ZTMST+SQRT  (PTKEM1M(JL,JK))*2.)/ZDISL
               IF (ZKTEST.LE.1.) THEN
                  ZTKEVN(JL,JK)=ZTKEMIN
               ELSE
                  ZTKEVN(JL,JK)=AMAX1(ZTKEMIN,
     &                                (ZDISL*(SQRT  (ZKTEST)-1.))**2)
               ENDIF
               IF(NSTEP.EQ.NSTART) THEN
                  PTKEM1M(JL,JK)=ZTKEVN(JL,JK)
                  PTKEM(JL,JK)=ZTKEVN(JL,JK)
               END IF
               ZTKESQ=SQRT  (AMAX1(ZTKEMIN,PTKEM1M(JL,JK)))
               ZZZM=ZMIX*ZSM*ZTKESQ
               ZZZH=ZMIX*ZSH*ZTKESQ
CDJ CHANGES FOR REMO1.0
               PZ2ZM(JL,JK)=ZZZM
               PZ2ZH(JL,JK)=ZZZH
CDJ 11.10.94
C
               ZZTVM=(PTVM1(JL,JK)+PTVM1(JL,JK+1))*0.5
               ZALF=PAPHM1(JL,JK+1)/(ZZTVM*ZHH(JL,JK)*ZRD)
               ZCFM(JL,JK)=ZZZM*ZCONS18*ZALF
               ZCFH(JL,JK)=ZZZH*ZCONS18*ZALF
               ZCDUM(JL,JK)=ZCFM(JL,JK)/ZTKESQ*SQRT  (ZTKEVN(JL,JK))
C
            ENDDO
C***
         ENDDO
C***
C
C*       3.8        DIFFUSION IMPLICIT COMPUTATIONS FOR TKE
C                   --------- -------- ------------ --- ---
C
         DO JK=KTDIA,KLEV
            DO JL=KIDIA,KFDIA
               ZEDIF(JL,JK)=ZTPFAC2*ZTKEVN(JL,JK)
            ENDDO
         ENDDO
C
         DO JL=KIDIA,KFDIA
            ZTCOE(JL)=(ZCDUM(JL,ITOP)+ZCDUM(JL,ITOPP1))*0.5
            ZQDP=1./(PAPM1(JL,ITOPP1)-PAPM1(JL,ITOP))
            ZDISC=1./(1.+(ZCDUM(JL,ITOP)+ZCDUM(JL,ITOPP1))*0.5*ZQDP)
            ZEBSM(JL,ITOP)=ZDISC*(ZCDUM(JL,ITOP)
     &           +ZCDUM(JL,ITOPP1))*0.5*ZQDP
            ZEDIF(JL,ITOP)=ZDISC*ZEDIF(JL,ITOP)
         ENDDO
C
         DO JK=ITOPP1,KLEV-2
            DO JL=KIDIA,KFDIA
               ZQDP=1./(PAPM1(JL,JK+1)-PAPM1(JL,JK))
               ZFAC=ZTCOE(JL)*ZQDP
               ZTCOE(JL)=(ZCDUM(JL,JK+1)+ZCDUM(JL,JK))*0.5
               ZDISC=1./(1.+ZFAC*(1.-ZEBSM(JL,JK-1))+(ZCDUM(JL,JK+1)+
     &              ZCDUM(JL,JK))*0.5*ZQDP)
               ZEBSM(JL,JK)=ZDISC*(ZCDUM(JL,JK+1)+ZCDUM(JL,JK))*0.5*ZQDP
               ZEDIF(JL,JK)=ZDISC*(ZEDIF(JL,JK)+ZFAC*ZEDIF(JL,JK-1))
            ENDDO
         ENDDO
C
         DO JL=KIDIA,KFDIA
            ZQDP=1./(PAPM1(JL,KLEV)-PAPM1(JL,KLEVM1))
            ZFAC=ZTCOE(JL)*ZQDP
            ZTCOE(JL)=(ZCDUM(JL,KLEV)+ZCDUM(JL,KLEVM1))*0.5
            ZDISC=1./(1.+ZFAC*(1.-ZEBSM(JL,KLEV-2))+(ZCDUM(JL,KLEV)+
     &           ZCDUM(JL,KLEVM1))*0.5*ZQDP)
            ZEDIF(JL,KLEVM1)=ZDISC*((ZCDUM(JL,KLEV)+ZCDUM(JL,KLEVM1))
     &           *0.5*ZQDP*ZEDIF(JL,KLEV)+ZEDIF(JL,KLEVM1)+
     &           ZFAC*ZEDIF(JL,KLEV-2))
         ENDDO
C
         DO JK=KLEV-2,ITOP,-1
            DO JL=KIDIA,KFDIA
               ZEDIF(JL,JK)=ZEDIF(JL,JK)+ZEBSM(JL,JK)*ZEDIF(JL,JK+1)
            ENDDO
         ENDDO
C
C --------------------------------------------------------------------
C
C*    TIME INTEGRATION OF TURBULENT KINETIC ENERGY AND CHECK
C     ---- ----------- -- --------- ------- ------ --- -----
C
         DO JK=ITOP,KLEV
            ZTEST=0.
            DO JL=KIDIA,KFDIA
               PTKE(JL,JK)=ZEDIF(JL,JK)+ZTPFAC3*ZTKEVN(JL,JK)
               IF (PTKE(JL,JK).LT.0.) ZTEST=ZTEST+1.
            ENDDO
            IF (ZTEST.NE.0.) THEN
               PRINT*,'TKE IS NEGATIVE'
               STOP 2
            ENDIF
         ENDDO
C
C*    TIME FILTER FOR TURBULENT KINETIC ENERGY
C     ---- ------ --- --------- ------- ------
C
         IF(NSTEP.NE.NSTART) THEN
            ZEPS=EPS
         ELSE
            ZEPS=0.
         ENDIF
         DO JK=KTDIA,KLEV
            DO JL=KIDIA,KFDIA
               PTKEM(JL,JK)=PTKEM(JL,JK)
     &              +ZEPS*(PTKEM1M(JL,JK)-2.*PTKEM(JL,JK)+PTKE(JL,JK))
            ENDDO
         ENDDO
C
C -----------------------------------------------------------------
C
C
C*         4.     DIFFUSION IMPLICIT COMPUTATIONS FOR MOMENTUM.
C                 --------- -------- ------------ --- ---------
C
C
C*         4.1     SETTING OF RIGHT HAND SIDES.
C
         DO JK=ITOP,KLEV
            DO JL=KIDIA,KFDIA
               ZUDIF(JL,JK)=ZTPFAC2*PUM1(JL,JK)
               ZVDIF(JL,JK)=ZTPFAC2*PVM1(JL,JK)
            ENDDO
         ENDDO
C
C*         4.2     TOP LAYER ELIMINATION.
C
         DO JL=KIDIA,KFDIA
            ZQDP=1./(PAPHM1(JL,ITOPP1)-PAPHM1(JL,ITOP))
            ZDISC=1./(1.+ZCFM(JL,ITOP)*ZQDP)
            ZEBSM(JL,ITOP)=ZDISC*(ZCFM(JL,ITOP)*ZQDP)
            ZUDIF(JL,ITOP)=ZDISC*ZUDIF(JL,ITOP)
            ZVDIF(JL,ITOP)=ZDISC*ZVDIF(JL,ITOP)
         ENDDO
C
C*         4.3     ELIMINATION FOR MIDDLE LAYERS.
C
         DO JK=ITOPP1,KLEVM1
            DO JL=KIDIA,KFDIA
               ZQDP=1./(PAPHM1(JL,JK+1)-PAPHM1(JL,JK))
               ZFAC=ZCFM(JL,JK-1)*ZQDP
               ZDISC=1./(1.+ZFAC*(1.-ZEBSM(JL,JK-1))+ZCFM(JL,JK)*ZQDP)
               ZEBSM(JL,JK)=ZDISC*(ZCFM(JL,JK)*ZQDP)
               ZUDIF(JL,JK)=ZDISC*(ZUDIF(JL,JK)+ZFAC*ZUDIF(JL,JK-1))
               ZVDIF(JL,JK)=ZDISC*(ZVDIF(JL,JK)+ZFAC*ZVDIF(JL,JK-1))
            ENDDO
         ENDDO
C
C*         4.4     BOTTOM LAYER ELIMINATION.
C
         DO JL=KIDIA,KFDIA
            ZQDP=1./(PAPHM1(JL,KLEVP1)-PAPHM1(JL,KLEV))
            ZFAC=ZCFM(JL,KLEVM1)*ZQDP
            ZTCOE(JL)=ZCFM(JL,KLEV)
            ZDISC=1./(1.+ZFAC*(1.-ZEBSM(JL,KLEVM1))+ZCFM(JL,KLEV)*ZQDP)
            ZUDIF(JL,KLEV)=ZDISC*(ZUDIF(JL,KLEV)+ZFAC*ZUDIF(JL,KLEVM1))
            ZVDIF(JL,KLEV)=ZDISC*(ZVDIF(JL,KLEV)+ZFAC*ZVDIF(JL,KLEVM1))
         ENDDO
C
C*         4.5     BACK-SUBSTITUTION.
C
         DO JK=KLEVM1,ITOP,-1
            DO JL=KIDIA,KFDIA
               ZUDIF(JL,JK)=ZUDIF(JL,JK)+ZEBSM(JL,JK)*ZUDIF(JL,JK+1)
               ZVDIF(JL,JK)=ZVDIF(JL,JK)+ZEBSM(JL,JK)*ZVDIF(JL,JK+1)
            ENDDO
         ENDDO
C
C*         4.6     INCREMENTATION OF U AND V TENDENCIES AND STORAGE OF
C*                 THE DISSIPATION.
C
         DO JL=KIDIA,KFDIA
            ZVIDIS(JL)=0.
         ENDDO
C***
         DO JK=ITOP,KLEV
C***
            DO JL=KIDIA,KFDIA
               ZDIS(JL,JK)=0.5*((ZTPFAC2*PUM1(JL,JK)-ZUDIF(JL,JK))
     &              *(ZTPFAC4*PUM1(JL,JK)+ZUDIF(JL,JK))+
     &              (ZTPFAC2*PVM1(JL,JK)-ZVDIF(JL,JK))
     &              *(ZTPFAC4*PVM1(JL,JK)+ZVDIF(JL,JK)))
               ZVIDIS(JL)=ZVIDIS(JL)+ZDIS(JL,JK)
     &              *(PAPHM1(JL,JK+1)-PAPHM1(JL,JK))
            ENDDO
C
C***
         ENDDO
C***
C
C*         4.8     UPDATING OF Z0 FOR OPEN SEA.
C
         DO JL=KIDIA,KFDIA
CTS CHANGES FOR LAND-/SEA-/SEAICE DIFFERENTIATION
            IF (.NOT.LOLAND(JL)) PAZ0L(JL)=0.0
            IF (LOSEA(JL)) THEN
               PAZ0W(JL)=AMAX1(ZEPZZO,
     &              ZCONS14*ZCFMW(JL)
     &              *SQRT  (ZUDIF(JL,KLEV)**2+ZVDIF(JL,KLEV)**2)
     &              *PTM1(JL,KLEV)*(1.+VTMPC1*PQM1(JL,KLEV)
     &              -(PXM1(JL,KLEV)+PXIM1(JL,KLEV)))/PAPHM1(JL,KLEVP1))
            ENDIF
            IF (LOICE(JL)) THEN
               PAZ0I(JL)=CZ0ICE
            ENDIF
            PAZ0(JL)=(FLOAT(INFRL(JL))*PAZ0L(JL)
     &              + FLOAT(INFRW(JL))*PAZ0W(JL)
     &              + FLOAT(INFRI(JL))*PAZ0I(JL))*EDFAKINF
C
C           AVERAGE WINDSTRESS
C
C           LAND
            IF(LOLAND(JL)) THEN
               ZTAUXL=ZCONS15*ZCFML(JL)*ZUDIF(JL,KLEV)
               ZTAUYL=ZCONS15*ZCFML(JL)*ZVDIF(JL,KLEV)
               PUSTRL(JL)=PUSTRL(JL)+ZDIAGT*ZTAUXL
               PVSTRL(JL)=PVSTRL(JL)+ZDIAGT*ZTAUYL
            ELSE
               ZTAUXL=0.0
               ZTAUYL=0.0
            ENDIF
C           WATER
            IF(LOSEA(JL)) THEN
               ZTAUXW=ZCONS15*ZCFMW(JL)*ZUDIF(JL,KLEV)
               ZTAUYW=ZCONS15*ZCFMW(JL)*ZVDIF(JL,KLEV)
               PUSTRW(JL)=PUSTRW(JL)+ZDIAGT*ZTAUXW
               PVSTRW(JL)=PVSTRW(JL)+ZDIAGT*ZTAUYW
            ELSE
               ZTAUXW=0.0
               ZTAUYW=0.0
            ENDIF
C           ICE
            IF(LOICE(JL)) THEN
               ZTAUXI=ZCONS15*ZCFMI(JL)*ZUDIF(JL,KLEV)
               ZTAUYI=ZCONS15*ZCFMI(JL)*ZVDIF(JL,KLEV)
               PUSTRI(JL)=PUSTRI(JL)+ZDIAGT*ZTAUXI
               PVSTRI(JL)=PVSTRI(JL)+ZDIAGT*ZTAUYI
            ELSE
               ZTAUXI=0.0
               ZTAUYI=0.0
            ENDIF
C           AVERAGE
            PUSTR(JL)=PUSTR(JL)+(FLOAT(INFRL(JL))*ZTAUXL
     &                         + FLOAT(INFRW(JL))*ZTAUXW
     &                         + FLOAT(INFRI(JL))*ZTAUXI)
     &                         *ZDIAGT*EDFAKINF
            PVSTR(JL)=PVSTR(JL)+(FLOAT(INFRL(JL))*ZTAUYL
     &                         + FLOAT(INFRW(JL))*ZTAUYW
     &                         + FLOAT(INFRI(JL))*ZTAUYI)
     &                         *ZDIAGT*EDFAKINF
C
C           WINDSTRESS OVER SEA
C
            ZTAU=SQRT  ((ZCONS15*ZCFM(JL,KLEV)*ZUDIF(JL,KLEV))**2
     &                 +(ZCONS15*ZCFM(JL,KLEV)*ZVDIF(JL,KLEV))**2)
CTS 240100
            PUSTAR3(JL)=PUSTAR3(JL)+ZDIAGT*SQRT  (ZTAU/ZRHOS)**3
            PVDIS(JL)=PVDIS(JL)+ZDIAGT*ZCONS15*ZVIDIS(JL)
         ENDDO
C
C
C     ------------------------------------------------------------------
C
C*         5.     DIFFUSION IMPLICIT COMPUTATIONS FOR HEAT (S.+L.).
C                 --------- -------- ------------ --- ---- --------
C
         DO JK=1,KLEV
            DO JL=KIDIA,KFDIA
               ZTDIF(JL,JK)=0.
               ZQDIF(JL,JK)=0.
               ZXDIF(JL,JK)=0.
            ENDDO
         ENDDO
C
C*         5.1     SETTING OF RIGHT HAND SIDES.
C
         DO JK=ITOP,KLEV
            DO JL=KIDIA,KFDIA
               ZTDIF(JL,JK)=ZTPFAC2*ZCPTGZ(JL,JK)
               ZQDIF(JL,JK)=ZTPFAC2*PQM1(JL,JK)
               ZXDIF(JL,JK)=ZTPFAC2*(PXM1(JL,JK)+PXIM1(JL,JK))
            ENDDO
         ENDDO
C
C*         5.2     TOP LAYER ELIMINATION.
C
         DO JL=KIDIA,KFDIA
            ZQDP=1./(PAPHM1(JL,ITOPP1)-PAPHM1(JL,ITOP))
            ZDISC=1./(1.+ZCFH(JL,ITOP)*ZQDP)
            ZEBSH(JL,ITOP)=ZDISC*(ZCFH(JL,ITOP)*ZQDP)
            ZTDIF(JL,ITOP)=ZDISC*ZTDIF(JL,ITOP)
            ZQDIF(JL,ITOP)=ZDISC*ZQDIF(JL,ITOP)
            ZXDIF(JL,ITOP)=ZDISC*ZXDIF(JL,ITOP)
         ENDDO
C
C*         5.3     ELIMINATION FOR MIDDLE LAYERS.
C
         DO JK=ITOPP1,KLEVM1
            DO JL=KIDIA,KFDIA
               ZQDP=1./(PAPHM1(JL,JK+1)-PAPHM1(JL,JK))
               ZFAC=ZCFH(JL,JK-1)*ZQDP
               ZDISC=1./(1.+ZFAC*(1.-ZEBSH(JL,JK-1))+ZCFH(JL,JK)*ZQDP)
               ZEBSH(JL,JK)=ZDISC*(ZCFH(JL,JK)*ZQDP)
               ZTDIF(JL,JK)=ZDISC*(ZTDIF(JL,JK)+ZFAC*ZTDIF(JL,JK-1))
               ZQDIF(JL,JK)=ZDISC*(ZQDIF(JL,JK)+ZFAC*ZQDIF(JL,JK-1))
               ZXDIF(JL,JK)=ZDISC*(ZXDIF(JL,JK)+ZFAC*ZXDIF(JL,JK-1))
            ENDDO
         ENDDO
C
C*         5.4     BOTTOM LAYER ELIMINATION.
C
         DO JL=KIDIA,KFDIA
            ZQDP=1./(PAPHM1(JL,KLEVP1)-PAPHM1(JL,KLEV))
            ZFAC=ZCFH(JL,KLEVM1)*ZQDP
            ZTCOE(JL)=ZCFH(JL,KLEV)
            ZDISC=1./(1.+ZFAC*(1.-ZEBSH(JL,KLEVM1))+ZCFH(JL,KLEV)*ZQDP)
            ZTDIF(JL,KLEV)=ZDISC*(ZTDIF(JL,KLEV)+(ZCFH(JL,KLEV)*ZQDP)
CTS CHANGES FOR LAND-/SEA-/SEAICE DIFFERENTIATION
     &           *ZTPFAC2*ZCPTE(JL)+ZFAC*ZTDIF(JL,KLEVM1))
C
            ZZCFH=(FLOAT(INFRL(JL))*ZCFHL(JL)*ZCAIR(JL)
     &           + FLOAT(INFRW(JL))*ZCFHW(JL)
     &           + FLOAT(INFRI(JL))*ZCFHI(JL))*EDFAKINF
            ZZQE=(FLOAT(INFRL(JL))*ZCFHL(JL)*ZQS(JL)*ZCSAT(JL)
     &          + FLOAT(INFRW(JL))*ZCFHW(JL)*ZQW(JL)
     &          + FLOAT(INFRI(JL))*ZCFHI(JL)*ZQI(JL))*EDFAKINF
            ZDISQ=1./(1.+ZFAC*(1.-ZEBSH(JL,KLEVM1))+ZZCFH*ZQDP)
            ZQDIF(JL,KLEV)=ZDISQ*(ZQDIF(JL,KLEV)+ZQDP
     &           *ZTPFAC2*ZZQE+ZFAC*ZQDIF(JL,KLEVM1))
CTS 240100
            ZXDIF(JL,KLEV)=ZDISC*(ZXDIF(JL,KLEV)+ZFAC*ZXDIF(JL,KLEVM1))
         ENDDO
C
C*         5.5     BACK-SUBSTITUTION.
C
         DO JK=KLEVM1,ITOP,-1
            DO JL=KIDIA,KFDIA
               ZTDIF(JL,JK)=ZTDIF(JL,JK)+ZEBSH(JL,JK)*ZTDIF(JL,JK+1)
               ZQDIF(JL,JK)=ZQDIF(JL,JK)+ZEBSH(JL,JK)*ZQDIF(JL,JK+1)
               ZXDIF(JL,JK)=ZXDIF(JL,JK)+ZEBSH(JL,JK)*ZXDIF(JL,JK+1)
            ENDDO
         ENDDO
C
C*         5.6     INCREMENTATION OF T AND Q TENDENCIES.
C
C***
         DO JK=ITOP,KLEV
C***
            DO JL=KIDIA,KFDIA
               ZQDIF(JL,JK)=ZQDIF(JL,JK)+ZTPFAC3*PQM1(JL,JK)
               ZTDIF(JL,JK)=ZTDIF(JL,JK)+ZTPFAC3*ZCPTGZ(JL,JK)
               ZXDIF(JL,JK)=ZXDIF(JL,JK)+ZTPFAC3*
     &              (PXM1(JL,JK)+PXIM1(JL,JK))
            ENDDO
C
C***
         ENDDO
C
C*         5.8     STORAGE OF THE SURFACE HEAT (S.+L.) AND MOISTURE
C*         FLUXES AND THEIR DERIVATIVES
C*         AGAINST SURFACE VARIABLES
C
         DO JL=KIDIA,KFDIA
CTS CHANGES FOR LAND-/SEA-/SEAICE DIFFERENTIATION
            ZCOEFF=0.0
            ZCOEFW=0.0
            ZCOEFI=0.0
            ZZQS=0.0
            ZCOEFA=ZCONS15*ZTCOE(JL)
            IF (LOLAND(JL)) ZCOEFF=ZCONS15*ZCFHL(JL)
            IF (LOSEA(JL)) ZCOEFW=ZCONS15*ZCFHW(JL)
            IF (LOICE(JL)) ZCOEFI=ZCONS15*ZCFHI(JL)
C**   MOISTURE FLUX
CTS 240100
            ZQNLEV=ZQDIF(JL,KLEV)-ZTPFAC3*PQM1(JL,KLEV)
CTS CHANGES FOR LAND-/SEA-/SEAICE DIFFERENTIATION
C*          LAND
            IF (LOLAND(JL)) THEN
CTS 240100
               ZZQS=ZTPFAC2*ZQS(JL)
               PQHFL(JL)=ZCOEFF*(ZCAIR(JL)*ZQNLEV-ZCSAT(JL)*ZZQS)
CTS CHANGES FOR LAND-/SEA-/SEAICE DIFFERENTIATION
               PQDBL(JL)=ZTPFAC1*((1.-ZCAIR(JL))*ZQNLEV+ZCSAT(JL)*ZZQS)
CSH
               IF (ZHUM(JL).LE.PQM1(JL,KLEV)/ZQS(JL)) THEN
                  ZQBSOIL(JL)=0.
               ELSE
                  ZQBSOIL(JL) = ZCOEFF * (1.- PCVS(JL)) * (1.-PCVW(JL))
     &                 * (1.-PVGRAT(JL)) * (ZQNLEV-ZHUM(JL)*ZZQS)
               ENDIF
C
C              *** POT. VERDUNSTUNG ***
               IF (PQM1(JL,KLEV).GT.ZQS(JL)) THEN
                  ZQBSOIL(JL) = ZCOEFF * (1.- PCVS(JL)) * (1.-PCVW(JL))
     &                 * (1.-PVGRAT(JL)) * (ZQNLEV-ZZQS)
               ENDIF
               ZQTRANS(JL) = ZCOEFF *
     &              ( PVGRAT(JL) * (1.- PCVS(JL)) * (1.-PCVW(JL)) ) /
     &              ( 1. + ZCFHL(JL) * ZTRFAK(JL) )
     &              * (ZQNLEV-ZZQS)
C
            ELSE
               PQHFL(JL)=0.0
               ZQBSOIL(JL)=0.0
               ZQTRANS(JL)=0.0
CSH
            ENDIF
C*          WATER
            IF (LOSEA(JL)) THEN
               ZQHFLW(JL)=ZCOEFW*(ZQNLEV-ZTPFAC2*ZQW(JL))
               PQDBW(JL)=ZQW(JL)
            ELSE
               ZQHFLW(JL)=0.0
            ENDIF
C*          SEAICE
            IF (LOICE(JL)) THEN
               ZQHFLI(JL)=ZCOEFI*(ZQNLEV-ZTPFAC2*ZQI(JL))
               PQDBI(JL)=ZQI(JL)
            ELSE
               ZQHFLI(JL)=0.0
            ENDIF
C     *AVERAGE
CSH  SEMMLER RAUS
C      PQHFLA(JL)=(FLOAT(INFRL(JL))*PQHFL(JL)+
C     &            FLOAT(INFRW(JL))*ZQHFLW(JL)+
C     &            FLOAT(INFRI(JL))*ZQHFLI(JL))*EDFAKINF
C
            PQDB(JL)=(FLOAT(INFRL(JL))*PQDBL(JL)+
     &                FLOAT(INFRW(JL))*PQDBW(JL)+
     &                FLOAT(INFRI(JL))*PQDBI(JL))*EDFAKINF
C
C**   SENSIBLE HEAT FLUX
CTS 240100
C
            ZTNLEV=ZTDIF(JL,KLEV)-ZTPFAC3*ZCPTGZ(JL,KLEV)
CTS CHANGES FOR LAND-/SEA-/SEAICE DIFFERENTIATION
C*          LAND
            IF (LOLAND(JL)) THEN
CTS 240100
               ZZCPTS=ZTPFAC2*ZCPTS(JL)
               PTHFL(JL)=ZCOEFF*(ZTNLEV-ZZCPTS)
               PDHFT(JL)=-ZCONS16*PQHFL(JL)
CTS CHANGES FOR LAND-/SEA-/SEAICE DIFFERENTIATION
               PTHFL(JL)=PTHFL(JL)+PTSLM1M(JL)*PDHFT(JL)
            ELSE
               PTHFL(JL)=0.0
            ENDIF
C*          WATER
            IF (LOSEA(JL)) THEN
               ZTHFLW(JL)=ZCOEFW*(ZTNLEV-ZTPFAC2*ZCPTW(JL))
               ZTHFLW(JL)=ZTHFLW(JL)-PTSWM1M(JL)*ZCONS16*ZQHFLW(JL)
            ELSE
               ZTHFLW(JL)=0.0
            ENDIF
C*          SEAICE
            IF (LOICE(JL)) THEN
               PTHFLI(JL)=ZCOEFI*(ZTNLEV-ZTPFAC2*ZCPTI(JL))
               PDHFTI(JL)=-ZCONS16*ZQHFLI(JL)
               PTHFLI(JL)=PTHFLI(JL)+PTSIM1M(JL)*PDHFTI(JL)
            ELSE
               PTHFLI(JL)=0.0
            ENDIF
C
C**   LIQUID WATER FLUX
CTS 240100
C
            ZXNLEV=ZXDIF(JL,KLEV)-ZTPFAC3*(PXM1(JL,KLEV)+PXIM1(JL,KLEV))
CTS CHANGES FOR LAND-/SEA-/SEAICE DIFFERENTIATION
            ZXHFL=ZCOEFA*ZXNLEV
CTS 240100
            PRSFL(JL)=MAX(0.,ZXHFL)
            PXHFL(JL)=MIN(ZXHFL,0.)
CTS CHANGES FOR LAND-/SEA-/SEAICE DIFFERENTIATION
C
C*    ACCUMULATED SENSIBLE HEAT FLUX AND EVAPORATION
C
            IF(LOLAND(JL)) THEN
               PAHFSL(JL)=PAHFSL(JL)+ZDIAGT*PTHFL(JL)
               PEVAPL(JL)=PEVAPL(JL)+ZDIAGW*(PQHFL(JL)+PXHFL(JL))
            ENDIF
            IF(LOSEA(JL)) THEN
               PAHFSW(JL)=PAHFSW(JL)+ZDIAGT*ZTHFLW(JL)
               PEVAPW(JL)=PEVAPW(JL)+ZDIAGW*(ZQHFLW(JL)+PXHFL(JL))
            ENDIF
            IF(LOICE(JL)) THEN
               PAHFSI(JL)=PAHFSI(JL)+ZDIAGT*PTHFLI(JL)
               PEVAPI(JL)=PEVAPI(JL)+ZDIAGW*(ZQHFLI(JL)+PXHFL(JL))
            ENDIF
            PAHFS(JL)=PAHFS(JL)+(FLOAT(INFRL(JL))*PTHFL(JL)
     &                         + FLOAT(INFRW(JL))*ZTHFLW(JL)
     &                         + FLOAT(INFRI(JL))*PTHFLI(JL))
     &                         * ZDIAGT*EDFAKINF
            PEVAP(JL)=PEVAPM(JL)
     &           +(FLOAT(INFRL(JL))*(PQHFL(JL)+PXHFL(JL))
     &           + FLOAT(INFRW(JL))*(ZQHFLW(JL)+PXHFL(JL))
     &           + FLOAT(INFRI(JL))*(ZQHFLI(JL)+PXHFL(JL)))
     &           * ZDIAGW*EDFAKINF
C
C*    DERIVATIVE OF MOISTURE FLUXES OVER LAND
C
            IF (LOLAND(JL)) THEN
CSH  SEMMLER RAUS
C      ZZZQS=ZTPFAC2*(FLOAT(INFRL(JL))*ZQS(JL)
C     &             + FLOAT(INFRW(JL))*ZQW(JL)
C     &             + FLOAT(INFRI(JL))*ZQI(JL))*EDFAKINF
C
C  ****TEMP ##### EIGENTLICH SINNVOLL: UND RICHTIG
               ZZZQS=ZTPFAC2*ZQS(JL)
C
CSH  ******SEMMLER KORRIGIEREN
C      PDHFQW(JL)=ZCOEFA*ZWLMXI(JL)*(1.-PCVS(JL))*(ZQNLEV-ZZZQS)
C      PDHFQS(JL)=ZCOEFA*(ZQNLEV-ZZZQS)

               PDHFQW(JL)=ZCOEFF*ZWLMXI(JL)*(1.-PCVS(JL))*(ZQNLEV-ZZZQS)
               PDHFQS(JL)=ZCOEFF*(ZQNLEV-ZZZQS)
CSH
C       ***  SEPARAT EVAP. FLUXES OVER LAND

               AESNOW(JL) = PCVS(JL) * PDHFQS(JL) * ZDIAGW
               AESKIN(JL) =  PDHFQW(JL)*PWLM1M(JL) * ZDIAGW
               AETRANS(JL) = ZQTRANS(JL) * ZDIAGW
               AEBSOIL(JL) = ZQBSOIL(JL) * ZDIAGW
C
C      PCVW(JL)=PWLM1M(JL)*ZWLMXI(JL)

CSH
            ELSE
               PDHFQW(JL)=0.0
               PDHFQS(JL)=0.0
CSH
               AEBSOIL(JL)=0.
               AETRANS(JL)=0.
               AESNOW(JL)=0.
               AESKIN(JL)=0.
CSH
            ENDIF
CTS 240100
         ENDDO
C
         DO JL=KIDIA,KFDIA
CTS CHANGES FOR LAND-/SEA-/SEAICE DIFFERENTIATION
C**         TOTAL HEAT FLUX, ACCUMULATED LATENT HEAT FLUX
C*          LAND
            IF (LOLAND(JL)) THEN
CTS 240100
               PQHFL(JL)=PQHFL(JL)-PCVS(JL)*PDHFQS(JL)
CTS CHANGES FOR LAND-/SEA-/SEAICE DIFFERENTIATION
               PTHFL(JL)=PTHFL(JL)+(WI3M1M(JL)*ALS+(1.-WI3M1M(JL))*ALV)*
     &              PQHFL(JL)+ALS*PCVS(JL)*PDHFQS(JL)
               PQHFLA(JL)=FLOAT(INFRL(JL))*PQHFL(JL)
            ENDIF
C*          WATER
            IF (LOSEA(JL)) THEN
               ZTHFLW(JL)=ZTHFLW(JL)+ALV*ZQHFLW(JL)
               PQHFLA(JL)=PQHFLA(JL)+FLOAT(INFRW(JL))*ZQHFLW(JL)
            ENDIF
C*          SEAICE
            IF (LOICE(JL)) THEN
               PTHFLI(JL)=PTHFLI(JL)+ALS*ZQHFLI(JL)
               PQHFLA(JL)=PQHFLA(JL)+FLOAT(INFRI(JL))*ZQHFLI(JL)
            ENDIF
C*          AVERAGE
            PAHFL(JL)=PAHFL(JL)
     &           +(FLOAT(INFRL(JL))
     &           *((WI3M1M(JL)*ALS+(1.-WI3M1M(JL))*ALV)
     &           *PQHFL(JL)+ALS*PCVS(JL)*PDHFQS(JL))
     &           + FLOAT(INFRW(JL))*(ALV*ZQHFLW(JL))
     &           + FLOAT(INFRI(JL))*(ALS*ZQHFLI(JL)))*ZDIAGT*EDFAKINF
            PQHFLA(JL)=PQHFLA(JL)*EDFAKINF
C**         DERIVATIVE OF TOTAL HEAT FLUX
C*          LAND
            IF (LOLAND(JL)) THEN
CTS 240100
               ZALVS=ALS*PCVS(JL)+ALV*(1.-PCVS(JL))
CTS CHANGES FOR LAND-/SEA-/SEAICE DIFFERENTIATION
               PDHFT(JL)=-ZTPFAC2*ZCONS15*ZCFHL(JL)
     &              *(ZCPTS(JL)/PTSLM1M(JL)+(ZALVS-ZCONS16*PTSLM1M(JL))
     &              *ZCSAT(JL)*ZDQS(JL))+PDHFT(JL)
            ELSE
               PDHFT(JL)=0.0
            ENDIF
C*          SEAICE
            IF (LOICE(JL)) THEN
               LO=PTSIM1M(JL).GT.TMELT
               IF (LO) THEN
                  ZALVS=ALV
               ELSE
                  ZALVS=ALS
               ENDIF
               PDHFTI(JL)=-ZTPFAC2*ZCONS15*ZCFHI(JL)
     &              *(ZCPTI(JL)/PTSIM1M(JL)+(ZALVS-ZCONS16*PTSIM1M(JL))
     &              *ZDQI(JL))+PDHFTI(JL)
            ELSE
               PDHFTI(JL)=0.0
            ENDIF
CTS 240100
         ENDDO
C
C*       5.95  COMPUTE NEW T2MAX AND MIN
C
         DO JL=KIDIA,KFDIA
CTS CHANGES FOR LAND-/SEA-/SEAICE DIFFERENTIATION
C
C     COMPUTE NEW T2M, T2M_MAX T2M_MIN
C
            ZRAT=ZHTQ/PGEOM1(JL,KLEV)
C*          LAND
            IF (LOLAND(JL)) THEN
               LO1=ZRICLS(JL).GE.0.
               ZCBN=ALOG(1.+(EXP(ZBN(JL))-1.)*ZRAT)
               ZCBS=-(ZBN(JL)-ZBH(JL))*ZRAT
               ZCBU=-ALOG(1.+(EXP(ZBN(JL)-ZBH(JL))-1.)*ZRAT)
               IF (LO1) THEN
                  ZRED=(ZCBN+ZCBS)/ZBH(JL)
               ELSE
                  ZRED=(ZCBN+ZCBU)/ZBH(JL)
               ENDIF
               ZH2M=ZCPTS(JL)+ZRED*(ZCPTGZ(JL,KLEV)-ZCPTS(JL))
               ZT2=(ZH2M-ZHTQ)/(CPD*(1.+VTMPC2*PQM1(JL,KLEV)))
            ELSE
               ZT2=0.0
            ENDIF
C*          WATER
            IF (LOSEA(JL)) THEN
               LO1=ZRICLW(JL).GE.0.
               ZCBN=ALOG(1.+(EXP(ZBNW(JL))-1.)*ZRAT)
               ZCBS=-(ZBNW(JL)-ZBHW(JL))*ZRAT
               ZCBU=-ALOG(1.+(EXP(ZBNW(JL)-ZBHW(JL))-1.)*ZRAT)
               IF (LO1) THEN
                  ZRED=(ZCBN+ZCBS)/ZBHW(JL)
               ELSE
                  ZRED=(ZCBN+ZCBU)/ZBHW(JL)
               ENDIF
               ZH2M=ZCPTW(JL)+ZRED*(ZCPTGZ(JL,KLEV)-ZCPTW(JL))
               ZT2W=(ZH2M-ZHTQ)/(CPD*(1.+VTMPC2*PQM1(JL,KLEV)))
            ELSE
               ZT2W=0.0
            ENDIF
C*          SEAICE
            IF (LOICE(JL)) THEN
               LO1=ZRICLI(JL).GE.0.
               ZCBN=ALOG(1.+(EXP(ZBNI(JL))-1.)*ZRAT)
               ZCBS=-(ZBNI(JL)-ZBHI(JL))*ZRAT
               ZCBU=-ALOG(1.+(EXP(ZBNI(JL)-ZBHI(JL))-1.)*ZRAT)
               IF (LO1) THEN
                  ZRED=(ZCBN+ZCBS)/ZBHI(JL)
               ELSE
                  ZRED=(ZCBN+ZCBU)/ZBHI(JL)
               ENDIF
               ZH2M=ZCPTI(JL)+ZRED*(ZCPTGZ(JL,KLEV)-ZCPTI(JL))
               ZT2I=(ZH2M-ZHTQ)/(CPD*(1.+VTMPC2*PQM1(JL,KLEV)))
            ELSE
               ZT2I=0.0
            ENDIF
C
            ZZT       =(FLOAT(INFRL(JL))*ZT2
     &                + FLOAT(INFRW(JL))*ZT2W
     &                + FLOAT(INFRI(JL))*ZT2I)*EDFAKINF
            PTEMP2(JL)=PTEMP2(JL)+ZZT*ZDIAGT
            PT2MAX(JL)=AMAX1(ZZT,PT2MAX(JL))
            PT2MIN(JL)=AMIN1(ZZT,PT2MIN(JL))
CTS 240100
C
C*          5.96   2M DEW POINT
C
            IT=INT(PTM1(JL,KLEV)*1000.)
            ZQS1=TLUCUA(IT)/PAPM1(JL,KLEV)
            ZQS1=ZQS1/(1.-VTMPC1*ZQS1)
            ZRH2M=AMAX1(ZEPHUM,PQM1(JL,KLEV)/ZQS1)
C
CTS CHANGES FOR LAND-/SEA-/SEAICE DIFFERENTIATION
C*          LAND
            IF (LOLAND(JL)) THEN
CTS 240100
               LO=ZT2.GT.TMELT
               IF (LO) THEN
                  ZCVM3=C3LES
                  ZCVM4=C4LES
               ELSE
                  ZCVM3=C3IES
                  ZCVM4=C4IES
               ENDIF
               ZAPH2M=PAPHM1(JL,KLEVP1)*
     &              (1.-ZHTQ/(RD*ZT2*(1.+VTMPC1*PQM1(JL,KLEV))))
               IT=INT(ZT2*1000.)
               ZQS2=TLUCUA(IT)/ZAPH2M
               ZQS2=ZQS2/(1.-VTMPC1*ZQS2)
               ZQ2M=ZRH2M*ZQS2
               ZFRAC=ALOG  (ZAPH2M*ZQ2M/(C2ES*(1.+VTMPC1*ZQ2M)))/ZCVM3
CTS CHANGES FOR LAND-/SEA-/SEAICE DIFFERENTIATION
               ZDEW2L=AMIN1(ZT2,(TMELT-ZFRAC*ZCVM4)/(1.-ZFRAC))
            ELSE
               ZDEW2L=0.0
            ENDIF
C*          WATER
            IF (LOSEA(JL)) THEN
               LO=ZT2W.GT.TMELT
               IF (LO) THEN
                  ZCVM3=C3LES
                  ZCVM4=C4LES
               ELSE
                  ZCVM3=C3IES
                  ZCVM4=C4IES
               ENDIF
               ZAPH2M=PAPHM1(JL,KLEVP1)*
     &              (1.-ZHTQ/(RD*ZT2W*(1.+VTMPC1*PQM1(JL,KLEV))))
               IT=INT(ZT2W*1000.)
               ZQS2=TLUCUA(IT)/ZAPH2M
               ZQS2=ZQS2/(1.-VTMPC1*ZQS2)
               ZQ2M=ZRH2M*ZQS2
               ZFRAC=ALOG  (ZAPH2M*ZQ2M/(C2ES*(1.+VTMPC1*ZQ2M)))/ZCVM3
               ZDEW2W=AMIN1(ZT2W,(TMELT-ZFRAC*ZCVM4)/(1.-ZFRAC))
            ELSE
               ZDEW2W=0.0
            ENDIF
C*          SEAICE
            IF (LOICE(JL)) THEN
               LO=ZT2I.GT.TMELT
               IF (LO) THEN
                  ZCVM3=C3LES
                  ZCVM4=C4LES
               ELSE
                  ZCVM3=C3IES
                  ZCVM4=C4IES
               ENDIF
               ZAPH2M=PAPHM1(JL,KLEVP1)*
     &              (1.-ZHTQ/(RD*ZT2I*(1.+VTMPC1*PQM1(JL,KLEV))))
               IT=INT(ZT2I*1000.)
               ZQS2=TLUCUA(IT)/ZAPH2M
               ZQS2=ZQS2/(1.-VTMPC1*ZQS2)
               ZQ2M=ZRH2M*ZQS2
               ZFRAC=ALOG  (ZAPH2M*ZQ2M/(C2ES*(1.+VTMPC1*ZQ2M)))/ZCVM3
               ZDEW2I=AMIN1(ZT2I,(TMELT-ZFRAC*ZCVM4)/(1.-ZFRAC))
            ELSE
               ZDEW2I=0.0
            ENDIF
C
            PDEW2(JL)=PDEW2(JL)+(FLOAT(INFRL(JL))*ZDEW2L
     &                         + FLOAT(INFRW(JL))*ZDEW2W
     &                         + FLOAT(INFRI(JL))*ZDEW2I)
     &                         * ZDIAGT*EDFAKINF
CTS 240100
C
C*          5.97   10M WIND COMPONENTS, MAX 10M WINDSPEED
C
            ZRAT=ZHUV/PGEOM1(JL,KLEV)
CTS CHANGES FOR LAND-/SEA-/SEAICE DIFFERENTIATION
C*          LAND
            IF (LOLAND(JL)) THEN
               LO1=ZRI(JL).GE.0.
               ZCBN=ALOG(1.+(EXP(ZBN(JL))-1.)*ZRAT)
               ZCBS=-(ZBN(JL)-ZBM(JL))*ZRAT
               ZCBU=-ALOG(1.+(EXP(ZBN(JL)-ZBM(JL))-1.)*ZRAT)
               IF (LO1) THEN
                  ZRED=(ZCBN+ZCBS)/ZBM(JL)
               ELSE
                  ZRED=(ZCBN+ZCBU)/ZBM(JL)
               ENDIF
               ZU10L=ZRED*PUM1(JL,KLEV)
               ZV10L=ZRED*PVM1(JL,KLEV)
               ZSPEEDL=SQRT(ZU10L**2+ZV10L**2)
            ELSE
               ZU10L=0.0
               ZV10L=0.0
               ZSPEEDL=0.0
            ENDIF
C*          WATER
            IF (LOSEA(JL)) THEN
               LO1=ZRIW(JL).GE.0.
               ZCBN=ALOG(1.+(EXP(ZBNW(JL))-1.)*ZRAT)
               ZCBS=-(ZBNW(JL)-ZBMW(JL))*ZRAT
               ZCBU=-ALOG(1.+(EXP(ZBNW(JL)-ZBMW(JL))-1.)*ZRAT)
               IF (LO1) THEN
                  ZRED=(ZCBN+ZCBS)/ZBMW(JL)
               ELSE
                  ZRED=(ZCBN+ZCBU)/ZBMW(JL)
               ENDIF
               ZU10W=ZRED*PUM1(JL,KLEV)
               ZV10W=ZRED*PVM1(JL,KLEV)
               ZSPEEDW=SQRT(ZU10W**2+ZV10W**2)
            ELSE
               ZU10W=0.0
               ZV10W=0.0
               ZSPEEDW=0.0
            ENDIF
C*          SEAICE
            IF (LOICE(JL)) THEN
               LO1=ZRII(JL).GE.0.
               ZCBN=ALOG(1.+(EXP(ZBNI(JL))-1.)*ZRAT)
               ZCBS=-(ZBNI(JL)-ZBMI(JL))*ZRAT
               ZCBU=-ALOG(1.+(EXP(ZBNI(JL)-ZBMI(JL))-1.)*ZRAT)
               IF (LO1) THEN
                  ZRED=(ZCBN+ZCBS)/ZBMI(JL)
               ELSE
                  ZRED=(ZCBN+ZCBU)/ZBMI(JL)
               ENDIF
               ZU10I=ZRED*PUM1(JL,KLEV)
               ZV10I=ZRED*PVM1(JL,KLEV)
               ZSPEEDI=SQRT(ZU10I**2+ZV10I**2)
            ELSE
               ZU10I=0.0
               ZV10I=0.0
               ZSPEEDI=0.0
            ENDIF
C
            PU10(JL)=PU10(JL)+(FLOAT(INFRL(JL))*ZU10L
     &                       + FLOAT(INFRW(JL))*ZU10W
     &                       + FLOAT(INFRI(JL))*ZU10I)*ZDIAGT*EDFAKINF
            PV10(JL)=PV10(JL)+(FLOAT(INFRL(JL))*ZV10L
     &                       + FLOAT(INFRW(JL))*ZV10W
     &                       + FLOAT(INFRI(JL))*ZV10I)*ZDIAGT*EDFAKINF
            ZWIN      =(FLOAT(INFRL(JL))*ZSPEEDL
     &                + FLOAT(INFRW(JL))*ZSPEEDW
     &                + FLOAT(INFRI(JL))*ZSPEEDI)*EDFAKINF
            PWIMAX(JL)=AMAX1(PWIMAX(JL),ZWIN)
            PWIND10(JL)=PWIND10(JL)+ZDIAGT*ZWIN
CTS 240100
         ENDDO
C
C     ------------------------------------------------------------------
C
C*         6.     NECESSARY COMPUTATIONS IF SUBROUTINE IS BY-PASSED.
C                 --------- ------------ -- ---------- -- ----------
C***
      ELSE
C***
         DO JL=KIDIA,KFDIA
            PEVAP(JL)=PEVAPM(JL)
            PTHFL(JL)=0.
            PDHFT(JL)=0.
            PQHFL(JL)=0.
            PXHFL(JL)=0.
            PDHFQW(JL)=0.
            PDHFQS(JL)=0.
            PRSFL(JL)=0.
CSH
            AEBSOIL(JL)=0.
            AETRANS(JL)=0.
            AESNOW(JL)=0.
            AESKIN(JL)=0.
         ENDDO
      ENDIF                     ! IF(LVDIFF)
C***
C
C     ------------------------------------------------------------------
C
C*         7.     RETURN WORKSPACE.
C                 ------ ----------
C
      RETURN
      END SUBROUTINE VDIFF
