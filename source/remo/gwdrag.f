C
C**** *GWDRAG* - DOES THE GRAVITY WAVE PARAMETERISATION.
C
C
C     SUBJECT.
C     --------
C
C          THIS ROUTINE COMPUTES THE PHYSICAL TENDENCIES OF THE
C          PROGNOSTIC VARIABLES U,V  AND T DUE TO VERTICAL TRANSPORTS BY
C          SUBGRIDSCALE OROGRAPHICALLY EXCITED GRAVITY WAVES
C
C
C**   INTERFACE.
C     ----------
C
C          *GWDRAG* IS CALLED FROM *PHYSC*.
C
C     INPUT ARGUMENTS.
C     ----- ----------
C
C
C  - 2D
C  PAPHM1   : HALF LEVEL PRESSURE (T-DT)
C  PAPM1    : FULL LEVEL PRESSURE (T-DT)
C  PGEOM1   : GEOPOTENTIAL ABOVE SURFACE (T-DT)
C  PTM1     : TEMPERATURE (T-DT)
C  PUM1     : ZONAL WIND (T-DT)
C  PVM1     : MERIDIONAL WIND (T-DT)
C  - 1D
C  PUSTRGWM : U-GRAVITY WAVE STRESS (ACCUMULATED, OLD VALUE)
C  PVSTRGWM : V-GRAVITY WAVE STRESS (ACCUMULATED, OLD VALUE)
C  PVARPM   : DIRECTIONAL OROGRAPHIC VARIANCE (PACKED)
C  PVDISGWM : DISSIPATION BY GRAVITY WAVE DRAG (ACCUMULATED, OLD VALUE)
C
C
C     OUTPUT ARGUMENTS.
C     ------ ----------
C
C  - 1D
C  PUSTRGW  : U-GRAVITY WAVE STRESS (ACCUMULATED, NEW VALUE)
C  PVSTRGW  : V-GRAVITY WAVE STRESS (ACCUMULATED, NEW VALUE)
C  PVARP    : DIRECTIONAL OROGRAPHIC VARIANCE (PACKED)
C  PVDISGW  : DISSIPATION BY GRAVITY WAVE DRAG (ACCUMULATED, NEW VALUE)
C
C
C     INPUT/OUTPUT ARGUMENTS.
C     -----------------------
C
C  - 2D
C  PTTE     : TENDENCY OF TEMPERATURE
C  PVOL     : TENDENCY OF MERIDIONAL WIND
C  PVOM     : TENDENCY OF ZONAL WIND
C
C
C     METHOD.
C     -------
C          THE SCHEME CONSISTS OF TWO PARTS,THE CALCULATION OF GRAVITY
C         WAVE STRESS AND THE STRESS PROFILE IN THE VERTICAL.
C         THE STRESS IS COMPUTED USING A LOW-LEVEL WIND,STATIC STABILITY
C         AND AN OROGRAPHIC VARIANCE.FOUR COMPONENTS OF VARIANCE ARE
C         AVAILABLE,THE CHOICE DETERMINED BY THE WIND DIRECTION.
C         A WAVE RICHARDSON NUMBER IS COMPUTED AT EACH LEVEL AND BY
C         REQUIRING THAT ITS VALUE IS NEVER LESS THAN A CRITICAL ONE
C         A VALUE OF STRESS IS DETERMINED AT EACH MODEL LEVEL.
C
C         THE GRAVITY WAVE STRESS COMPRISES TWO PARTS DEPENDING ON
C         THE CRITICAL FROUDE NUMBER OF THE LOW LEVEL FLOW , AND AN
C         OROGRAPHIC ANISOTROPY FUNCTION (A MEASURE OF TWO-DIM) IS
C         USED FOR THE SUPERCRITICAL COMPONENT.
C
C     EXTERNALS.
C     ----------
C
C         *GWUNPK*   TO UNPACK OROGRAPHIC VARIANCES
C
C     REFERENCE.
C     ----------
C         SEE MODEL DOCUMENTATION
C
C     AUTHOR.
C     -------
C
C      U. SCHLESE   DKRZ-HAMBURG   MAR-94
C      D. JACOB  MPI AUG. 94
C      BASED ON ORIGINAL ECMWF VERSION BY M. MILLER AND B. RITTER - 1986
C                              REVISED BY M. MILLER - 1989
C
C
      SUBROUTINE GWDRAG ( KIDIA,KFDIA,KLON,KTDIA,KLEV,KLEVM1,KLEVP1
     &       ,NSTEP,NSTART,TWODT
C-----------------------------------------------------------------------
C - INPUT 2D .
     &       ,PAPHM1,   PAPM1,    PGEOM1,   PTM1,     PUM1,     PVM1
C - INPUT 1D .
     &       ,PVAR
C - IN/OUTPUT 1D .
     &       ,PUSTRGW,    PVDISGW,  PVSTRGW
C - INPUT/OUTPUT 2D .
     &       ,PTTE,     PVOL,     PVOM
     &       )
C
      IMPLICIT NONE
C
      INCLUDE "COMCON"
C
C     Dummy Arguments
C
      INTEGER, INTENT(IN)    :: KIDIA,KFDIA,KLON,KTDIA,KLEV,KLEVM1,
     &                          KLEVP1,NSTEP,NSTART
      REAL,    INTENT(IN)    :: TWODT
      REAL,    INTENT(IN)    :: PUM1(KLON,KLEV),   PVM1(KLON,KLEV),
     &                          PTM1(KLON,KLEV),   PVAR(KLON,4),
     &                          PGEOM1(KLON,KLEV), PAPM1(KLON,KLEV),
     &                          PAPHM1(KLON,KLEVP1)
      REAL,    INTENT(INOUT) :: PUSTRGW(KLON),     PVSTRGW(KLON), 
     &                          PVDISGW(KLON),     PTTE(KLON,KLEV), 
     &                          PVOM(KLON,KLEV),   PVOL(KLON,KLEV)
C     ---------------------------------
C     Local Variables
C     TEMPORARY ARRAYS
C
      REAL :: ZTAU(KLON,KLEVP1)
     &       ,ZSTAB(KLON,KLEVP1)
     &       ,ZVPH(KLON,KLEVP1)
     &       ,ZRHO(KLON,KLEVP1)
     &       ,ZRI(KLON,KLEVP1)
     &       ,ZVPF(KLON,KLEV)
     &       ,ZHCRIT(KLON,KLEV)
     &       ,ZNCRIT(KLON,KLEV)
     &       ,ZDZ2(KLON,KLEV)
     &       ,ZDP(KLON,KLEV)
     &       ,ZVIDIS(KLON)
     &       ,ZULOW(KLON)
     &       ,ZVLOW(KLON)
     &       ,ZTFR(KLON)
     &       ,ZNORM(KLON)
      REAL :: ZVAR(KLON,4)
      INTEGER ::
     &        ICRIT(KLON)
     &       ,ISECT(KLON)
     &       ,JKCRITH(KLON)
     &       ,JKCRIT(KLON)
     &       ,JKHLIM(KLON)
     &       ,JKTOP(KLON)
      LOGICAL ::
     &        LO1(KLON,KLEV)
C
      LOGICAL :: LO
      REAL    :: ZDELC,ZDEDT,ZDAMP,ZCONS5,ZCONS4,ZCONS2,ZCONS1,
     &           ZANISOT,ZANIF,ZALFA,V2,V1,R2,R1,ZSMOOTH,ZSIGT,
     &           ZSIGCR,ZRIW,ZRCRIT,ZRAHILO,ZR,ZMAXD,ZKDRAGL,ZKDRAG,
     &           ZHMAX,ZHGEO,ZFRCRIT,ZFR,ZDZ2N,ZDWIND,ZDVDT,ZDUDT,
     &           ZDTDT,ZDIS,ZDIAGT,ZDELV,ZDELP,ZSQR,ZSSEC,ZST,ZTHETA,
     &           ZTL,ZTMST,ZTSEC,ZU,ZUST,ZVCRIT,ZVELO,ZVEW,ZVNE,ZVNS,
     &           ZVNW,ZVSEC,ZVST,ZZVAR
      INTEGER :: JLCRIT,JLCBOT,JL,JKH,JKCR,ILEVH,IKTOP,IKCRIT,
     &           IKBCRIT,JLTOP,JK

C
C*    PHYSICAL CONSTANTS.
C     -------- ----------
C
C
C*   PHYSICAL CONSTANTS
C    -------- ---------
C    *ZKDRAG * DRAG CONSTANT (PROPORTIONAL TO WAVENUMBER)
C    *ZKDRAGL* DRAG CONSTANT FOR SUPERCRITICAL STRESS
C    *ZRAHILO* RATIO OF HIGH TO LOW LEVEL STRESS
C    *ZHMAX  * LIMITING HEIGHT FOR SUPERCRITICAL STRESS
C    *ZSIGT  * TOP OF LAYER FOR STRESS COMPUTATION
C    *ZSIGCR * TOP OF LAYER FOR LOW LEVEL DRAG
C    *ZFRCRIT* CRITICAL FROUDE NUMBER
C    *ZRCRIT*  CRITICAL RICHARDSON NUMBER FOR ONSET OF WAVE TURBULENCE.
C    *ZVCRIT*  LOWER LIMIT FOR LOW LEVEL WIND TO BE USED FOR GWD.
C    *ZMAXD*   MAXIMUM VELOCITY TENDENCY IN FRACTION OF VELOCITY
C              TO AVOID NEGATIVE DISSIPATION
C
C
CDJ   IF(NGL.GE.64) THEN
      ZKDRAG=0.000030
CDJ   ELSE
CDJ     ZKDRAG=5.E-6
CDJ   ENDIF
      ZKDRAGL=4.*ZKDRAG
      ZRAHILO=0.30
      ZHMAX=10000.
      ZSIGT=0.93
      ZSIGCR=0.80
      ZRCRIT=0.25
      ZVCRIT=0.0
      ZDAMP=4.
      ZSMOOTH=1./(1.+ZDAMP)
      ZFRCRIT=2.0
      ZMAXD=0.5
C
C*    SECURITY PARAMETERS.
C     --------------------
C
C     *ZVSEC* TO SECURE THE PROJECTION CALCULATION.
C     *ZTSEC* TO SECURE THE STRESS CALCULATION.
C     *ZSSEC* TO SECURE STABILITY.
C
      ZVSEC=0.10
      ZTSEC=1.E-07
      ZSSEC=1.E-12
C
C*    COMPUTATIONAL CONSTANTS.
C     ------------- ----------
C
      ILEVH=KLEV/2
      ZTMST=TWODT
      IF (NSTEP.EQ.NSTART) ZTMST=0.5*TWODT
      ZDIAGT=0.5*TWODT
C
      ZCONS1=1./RD
      ZCONS2=G**2/CPD
      ZCONS4=1./(G*ZTMST)
      ZCONS5=1.5*API
C
C     ------------------------------------------------------------------
C
C*         1.    UNPACK VARIANCES FROM WORK FILE ARRAY
C                ------ --------- ---- ---- ---- -----
C
      DO JK=1,4
         DO JL=KIDIA,KFDIA
            ZVAR(JL,JK)=PVAR(JL,JK)
         ENDDO
      ENDDO
C
C     -----------------------------------------------------------
C
C*         2.     PRECOMPUTE BASIC STATE VARIABLES.
C                 ---------- ----- ----- ----------
C
C*         2.1     DEFINE LOW LEVEL WIND, PROJECT WINDS IN PLANE OF
C*                 LOW LEVEL WIND, DETERMINE SECTOR IN WHICH TO TAKE
C*                 THE VARIANCE AND SET INDICATOR FOR CRITICAL LEVELS.
C
C*             DEFINE TOP OF LOW LEVEL FLOW
C
      DO JK=KLEV,ILEVH,-1
         DO JL=KIDIA,KFDIA
            LO=(PAPHM1(JL,JK)/PAPHM1(JL,KLEVP1)).GE.ZSIGCR
            IF (LO) JKCRIT(JL)=JK
         ENDDO
      ENDDO
C
      DO JL=KIDIA,KFDIA
         ZULOW(JL)       =0.0
         ZSTAB(JL,KLEVP1)=0.0
         ZRI  (JL,KLEVP1)=9999.0
         ZRHO (JL,KLEVP1)=0.0
         ZVLOW(JL)       =0.0
         JKCRITH(JL)     =KLEV
         ICRIT(JL)       =1
      ENDDO
C
C*    DEFINE TOP OF SUBCRITICAL LOWLEVEL DRAG
C     ------ --- -- ----------- -------- ----
C
      DO JK=KLEV,ILEVH,-1
         DO JL=KIDIA,KFDIA
            LO=(PAPM1(JL,JK)/PAPHM1(JL,KLEVP1)).GE.ZSIGT
            IF (LO) JKTOP(JL)=JK
         ENDDO
      ENDDO
C
      JLTOP=MINVAL(JKTOP)
      IKTOP=JKTOP(JLTOP)
C
      DO JK=IKTOP,KLEV
         DO JL=KIDIA,KFDIA
            IF(JK.GE.JKTOP(JL)) THEN
               ZULOW(JL)=ZULOW(JL)+PUM1(JL,JK)
     &              *(PAPHM1(JL,JK+1)-PAPHM1(JL,JK))
               ZVLOW(JL)=ZVLOW(JL)+PVM1(JL,JK)
     &              *(PAPHM1(JL,JK+1)-PAPHM1(JL,JK))
            ENDIF
         ENDDO
      ENDDO
C
      DO JL=KIDIA,KFDIA
         ZULOW(JL)=ZULOW(JL)/(PAPHM1(JL,KLEVP1)-PAPHM1(JL,JKTOP(JL)))
         ZVLOW(JL)=ZVLOW(JL)/(PAPHM1(JL,KLEVP1)-PAPHM1(JL,JKTOP(JL)))
         ZNORM(JL)=MAX(SQRT(ZULOW(JL)**2+ZVLOW(JL)**2),ZVSEC)
         ZVPH(JL,KLEVP1)=ZNORM(JL)
      ENDDO
C
      DO JL=KIDIA,KFDIA
         LO=ABS(ZULOW(JL)).LT.ZVSEC
         IF (LO) THEN
            ZU=ZULOW(JL)+2.*ZVSEC
         ELSE
            ZU=ZULOW(JL)
         ENDIF
         ZTHETA=ATAN(ZVLOW(JL)/ZU)
         ISECT(JL)=MOD(INT((ZTHETA/API+0.625)*4.),4)+1
      ENDDO
C
C
      DO JK=KTDIA,KLEV
         DO JL=KIDIA,KFDIA
            ZVPF(JL,JK)=(ZULOW(JL)*PUM1(JL,JK)+ZVLOW(JL)*PVM1(JL,JK))
     &           /ZNORM(JL)
            ZTAU(JL,JK)=0.0
            ZHCRIT(JL,JK)=0.0
            ZNCRIT(JL,JK)=0.0
            LO1(JL,JK)=.FALSE.
         ENDDO
      ENDDO
C
      DO JK=2,KLEV
         DO JL=KIDIA,KFDIA
            ZDP(JL,JK)=PAPM1(JL,JK)-PAPM1(JL,JK-1)
            ZVPH(JL,JK)=((PAPHM1(JL,JK)-PAPM1(JL,JK-1))*ZVPF(JL,JK)+
     &           (PAPM1(JL,JK)-PAPHM1(JL,JK))*ZVPF(JL,JK-1))
     &             /ZDP(JL,JK)
            LO=ZVPH(JL,JK).LT.ZVSEC
            IF (LO) THEN
               ZVPH(JL,JK)=ZVSEC
               ICRIT(JL)=JK
            ENDIF
         ENDDO
      ENDDO
C
C
C*         2.2     BRUNT-VAISALA FREQUENCY AND DENSITY AT HALF LEVELS.
C
      DO JK=KLEV,2,-1
         DO JL=KIDIA,KFDIA
            ZRHO(JL,JK)=2.*PAPHM1(JL,JK)*ZCONS1/
     &                      (PTM1(JL,JK)+PTM1(JL,JK-1))
            ZSTAB(JL,JK)=2.*ZCONS2/(PTM1(JL,JK)+PTM1(JL,JK-1))*
     &         (1.-CPD*ZRHO(JL,JK)*(PTM1(JL,JK)-PTM1(JL,JK-1))
     &           /ZDP(JL,JK))
            ZSTAB(JL,JK)=MAX(ZSTAB(JL,JK),ZSSEC)
         ENDDO
      ENDDO
C
      DO JK=IKTOP+1,KLEVM1
         DO JL=KIDIA,KFDIA
            IF(JK.GT.JKTOP(JL)) THEN
               ZST=ZCONS2/PTM1(JL,JK)*(1.-CPD*ZRHO(JL,JK)*
     &              (PTM1(JL,JK)-PTM1(JL,JK-1))/ZDP(JL,JK))
               ZSTAB(JL,KLEVP1)=ZSTAB(JL,KLEVP1)+ZST*ZDP(JL,JK)
               ZSTAB(JL,KLEVP1)=MAX(ZSTAB(JL,KLEVP1),ZSSEC)
               ZRHO(JL,KLEVP1)=ZRHO(JL,KLEVP1)+
     &              PAPHM1(JL,JK)*2.*ZDP(JL,JK)
     &              *ZCONS1/(PTM1(JL,JK)+PTM1(JL,JK-1))
            ENDIF
         ENDDO
      ENDDO
C
      DO JL=KIDIA,KFDIA
         ZSTAB(JL,KLEVP1)=ZSTAB(JL,KLEVP1)/(PAPM1(JL,KLEVM1)
     &        -PAPM1(JL,JKTOP(JL)))
         ZRHO(JL,KLEVP1)=ZRHO(JL,KLEVP1)/(PAPM1(JL,KLEVM1)
     &        -PAPM1(JL,JKTOP(JL)))
      ENDDO
C
C*         2.3     MEAN FLOW RICHARDSON NUMBER.
C*               AND CRITICAL HEIGHT FOR FROUDE LAYER
C
      DO JK=2,KLEV
         DO JL=KIDIA,KFDIA
            ZDWIND=MAX(ABS(ZVPF(JL,JK)-ZVPF(JL,JK-1)),ZVSEC)
            ZRI(JL,JK)=ZSTAB(JL,JK)*(ZDP(JL,JK)
     &           /(G*ZRHO(JL,JK)*ZDWIND))**2
            ZRI(JL,JK)=MAX(ZRI(JL,JK),0.25)
         ENDDO
      ENDDO
C
      DO JK=KLEVM1,2,-1
         DO JL=KIDIA,KFDIA
            ZHCRIT(JL,JK)=ZHCRIT(JL,JK+1)+ZVPH(JL,JK)*ZDP(JL,JK)
            ZNCRIT(JL,JK)=ZNCRIT(JL,JK+1)+SQRT(ZSTAB(JL,JK))*ZDP(JL,JK)
         ENDDO
      ENDDO
C
      DO JK=KLEVM1,2,-1
         DO JL=KIDIA,KFDIA
            ZHCRIT(JL,JK)=ZCONS5*ZHCRIT(JL,JK)/ZNCRIT(JL,JK)
            ZHGEO=PGEOM1(JL,JK)/9.81
            LO1(JL,JK)=(ZHGEO.GT.ZHCRIT(JL,JK))
            IF (LO1(JL,JK).OR.LO1(JL,JK+1)) !HG XOR NOT OR
     &           JKCRITH(JL)=JK
            LO=ZHGEO.LT.ZHMAX
            IF (LO) JKHLIM(JL)=JK
         ENDDO
      ENDDO
C
C*         2.4     LOWEST LEVEL STRESS.
C
      DO JL=KIDIA,KFDIA
         JKCR=JKCRIT(JL)
         ZZVAR=ZVAR(JL,ISECT(JL))
         ZFR=SQRT(ZSTAB(JL,KLEVP1)*ZZVAR)/ZVPH(JL,KLEVP1)
         ZDZ2N=(ZFRCRIT*ZVPH(JL,KLEVP1))**2/ZSTAB(JL,KLEVP1)
         ZZVAR=MIN(ZZVAR,ZDZ2N)
         ZTAU(JL,KLEVP1)=ZRHO(JL,KLEVP1)*ZKDRAG*SQRT(ZSTAB(JL,KLEVP1))
     &                                         *ZZVAR*ZVPH(JL,KLEVP1)
         LO=(ZTAU(JL,KLEVP1).LT.ZTSEC).OR.(ICRIT(JL).GE.JKCR)
     &        .OR.(ZVPH(JL,KLEVP1).LT.ZVCRIT)
         IF (LO) THEN
            ICRIT(JL)=KLEVP1
            ZTAU(JL,KLEVP1)=0.
         ENDIF
         ZTAU(JL,JKCR)=ZRAHILO*ZTAU(JL,KLEVP1)
         JKCRITH(JL)=MAX(JKCRITH(JL),JKHLIM(JL))
         JKCRITH(JL)=MAX(JKCRITH(JL),MIN(ICRIT(JL),JKCR))
C
C        COMPUTE ANISOTROPY FUNCTION FOR FROUDE CONTRIBUTION TO STRESS
C
         R1=1.0
         R2=1.0
         ZANISOT=1.0
         ZVNS=ZVAR(JL,1)+1.0
         ZVNE=ZVAR(JL,2)+1.0
         ZVEW=ZVAR(JL,3)+1.0
         ZVNW=ZVAR(JL,4)+1.0
         V1=MAX(ZVEW,ZVNS)
         IF(V1.GT.10000.) R1=ZVEW/ZVNS
         V2=MAX(ZVNE,ZVNW)
         IF(V2.GT.10000.) R2=ZVNE/ZVNW
         IF(R1.LT.1.0) R1=1./R1
         IF(R2.LT.1.0) R2=1./R2
         ZANISOT=MAX(SQRT(R1),SQRT(R2))
         ZANIF=1.0-EXP(1.0-ZANISOT)
         ZTL=ZKDRAGL*ZRHO(JL,KLEVP1)*ZANIF*ZVPH(JL,KLEVP1)**3
     &             *(ZFR-ZFRCRIT)**2/SQRT(ZSTAB(JL,KLEVP1))
         IF (ZFR.GT.ZFRCRIT) THEN
            ZTFR(JL)=ZTL
         ELSE
            ZTFR(JL)=0.0
         ENDIF
      ENDDO
C
C  ----------------------------------------------------------
C
C*         3.      COMPUTE STRESS PROFILE.
C*                 ------- ------ --------
C
      JLCBOT=MAXVAL(JKCRIT)
      IKBCRIT=JKCRIT(JLCBOT)
      IKBCRIT=MIN(IKBCRIT,KLEVM1)

      DO JK=IKBCRIT-1,2,-1
C
C
C*         3.1    WAVE DISPLACEMENT AT NEXT LEVEL.
C
         DO JL=KIDIA,KFDIA
            IF(JK.LT.JKCRIT(JL)) THEN
               ZNORM(JL)=ZRHO(JL,JK)*ZKDRAG*SQRT(ZSTAB(JL,JK))
     &              *ZVPH(JL,JK)
               ZDZ2(JL,JK)=ZTAU(JL,JK+1)/ZNORM(JL)*2.
            ENDIF
         ENDDO
C
C*         3.2    WAVE RICHARDSON NUMBER, NEW WAVE DISPLACEMENT
C*                AND STRESS.
C
         DO JL=KIDIA,KFDIA
            IF(JK.LT.JKCRIT(JL)) THEN
               ZSQR=SQRT(ZRI(JL,JK))
               ZALFA=SQRT(ZSTAB(JL,JK)*ZDZ2(JL,JK))/ZVPH(JL,JK)
               ZRIW=ZRI(JL,JK)*(1.-ZALFA)/(1.+ZALFA*ZSQR)**2
               ZR=2.+1./ZSQR
               ZDZ2N=(ZVPH(JL,JK)*(2.*SQRT(ZR)-ZR))**2/ZSTAB(JL,JK)
               LO=ZRIW.LT.ZRCRIT
               IF (LO) THEN
                  ZTAU(JL,JK)=ZNORM(JL)*ZDZ2N*0.5
               ELSE
                  ZTAU(JL,JK)=ZNORM(JL)*ZDZ2(JL,JK)*0.5
               ENDIF
               LO=(ZTAU(JL,JK+1).LT.ZTSEC).OR.(JK.LE.ICRIT(JL))
               IF (LO) ZTAU(JL,JK)=0.
               ZTAU(JL,JK)=MIN(ZTAU(JL,JK),ZTAU(JL,JK+1))
            ENDIF
         ENDDO
      ENDDO
C
C*   3.4  LOW LEVEL STRESS PROFILE (SUBCRITICAL COMPONENT)
C
      JLCRIT=MINVAL(JKCRIT)
      IKCRIT=JKCRIT(JLCRIT)
C
      DO JK=IKCRIT+1,KLEVP1
!DIR$ IVDEP
         DO JL=KIDIA,KFDIA
            JKCR=JKCRIT(JL)
            IF(JK.GT.JKCR) THEN
               ZTAU(JL,JK)=ZTAU(JL,JKCR)
     &              *(PAPHM1(JL,KLEVP1)-PAPHM1(JL,JK))
     &              +ZTAU(JL,KLEVP1)*(PAPHM1(JL,JK)-PAPHM1(JL,JKCR))
               ZTAU(JL,JK)=ZTAU(JL,JK)
     &              /(PAPHM1(JL,KLEVP1)-PAPHM1(JL,JKCR))
            ENDIF
         ENDDO
      ENDDO
C
C*      3.5   ADDITION OF LOW LEVEL STRESS PROFILE(SUPER CRITICAL)
C
      DO JK=2,KLEVP1
         DO JL=KIDIA,KFDIA
            JKH=JKCRITH(JL)
            IF (JK.GE.JKH) THEN
               ZDELP=PAPHM1(JL,JK)-PAPHM1(JL,JKH)
            ELSE
               ZDELP=0.0
            ENDIF
            ZTAU(JL,JK)=ZTAU(JL,JK)+ZTFR(JL)*ZDELP
     &           /(PAPHM1(JL,KLEVP1)-PAPHM1(JL,JKH))
         ENDDO
      ENDDO
C
C*           TOP LAYER STRESS SET TO ZERO
C*          AND SMOOTH STRESS IN UPPER LAYERS
C
C
      DO JL=KIDIA,KFDIA
         ZTAU(JL,1)=0.0
         ZSTAB(JL,1)=0.0
         ZRI(JL,1)=0.0
         ZVPH(JL,1)=0.0
         ZVIDIS(JL)=0.0
         ZTAU(JL,2)=ZSMOOTH*ZTAU(JL,3)
      ENDDO
C
C   ---------------------------------------------------------------
C
C*         4.      TENDENCIES.
C*                 -----------
C
      DO JK=KTDIA,KLEV
C
         DO JL=KIDIA,KFDIA
            ZDUDT=-G*ZULOW(JL)*(ZTAU(JL,JK+1)-ZTAU(JL,JK))/
     &           (ZVPH(JL,KLEVP1)*(PAPHM1(JL,JK+1)-PAPHM1(JL,JK)))
            ZDVDT=-G*ZVLOW(JL)*(ZTAU(JL,JK+1)-ZTAU(JL,JK))/
     &           (ZVPH(JL,KLEVP1)*(PAPHM1(JL,JK+1)-PAPHM1(JL,JK)))
            ZVELO=SQRT(PUM1(JL,JK)**2+PVM1(JL,JK)**2)
            ZDELV=SQRT((ZTMST*ZDUDT)**2+(ZTMST*ZDVDT)**2)
            ZDELV=AMAX1(ZDELV,0.001)
            ZDELC=AMIN1(ZMAXD*ZVELO/ZDELV,1.)
            ZDUDT=ZDELC*ZDUDT
            ZDVDT=ZDELC*ZDVDT
            PVOM(JL,JK)=PVOM(JL,JK)+ZDUDT
            PVOL(JL,JK)=PVOL(JL,JK)+ZDVDT
            ZUST=PUM1(JL,JK)+ZTMST*ZDUDT
            ZVST=PVM1(JL,JK)+ZTMST*ZDVDT
            ZDIS=0.5*(PUM1(JL,JK)**2+PVM1(JL,JK)**2-ZUST**2-ZVST**2)
            ZDEDT=ZDIS/ZTMST
            ZVIDIS(JL)=ZVIDIS(JL)+ZDIS*(PAPHM1(JL,JK+1)-PAPHM1(JL,JK))
            ZDTDT=ZDEDT/CPD
            PTTE(JL,JK)=PTTE(JL,JK)+ZDTDT
         ENDDO
C
C***
      ENDDO
C***
C
C*     4.3     UPDATE STRESS COMPONENTS AND DISSIPATION
C
      DO JL=KIDIA,KFDIA
         PUSTRGW(JL)=PUSTRGW(JL)+ZDIAGT*ZTAU(JL,KLEVP1)*ZULOW(JL)
     &        /ZVPH(JL,KLEVP1)
         PVSTRGW(JL)=PVSTRGW(JL)+ZDIAGT*ZTAU(JL,KLEVP1)*ZVLOW(JL)
     &        /ZVPH(JL,KLEVP1)
         PVDISGW(JL)=PVDISGW(JL)+ZDIAGT*ZCONS4*ZVIDIS(JL)
      ENDDO
C
      RETURN
      END SUBROUTINE GWDRAG
